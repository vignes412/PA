{"version":3,"file":"SleepTrackingPage-nf6Tifin.js","sources":["../../node_modules/recharts/es6/cartesian/Line.js","../../node_modules/recharts/es6/chart/LineChart.js","../../src/utils/sleepCalculator.ts","../../src/store/sleepLogStore.ts","../../src/components/ui/textarea.tsx","../../src/components/sleep/SleepLogForm.tsx","../../src/components/sleep/SleepAnalyticsDashboard.tsx","../../src/views/SleepTrackingPage.tsx"],"sourcesContent":["var _excluded = [\"type\", \"layout\", \"connectNulls\", \"ref\"],\n  _excluded2 = [\"key\"];\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * @fileOverview Line\n */\nimport React, { PureComponent } from 'react';\nimport Animate from 'react-smooth';\nimport isFunction from 'lodash/isFunction';\nimport isNil from 'lodash/isNil';\nimport isEqual from 'lodash/isEqual';\nimport clsx from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { LabelList } from '../component/LabelList';\nimport { ErrorBar } from './ErrorBar';\nimport { uniqueId, interpolateNumber } from '../util/DataUtils';\nimport { findAllByType, filterProps, hasClipDot } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfLine, getValueByDataKey } from '../util/ChartUtils';\nexport var Line = /*#__PURE__*/function (_PureComponent) {\n  function Line() {\n    var _this;\n    _classCallCheck(this, Line);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Line, [].concat(args));\n    _defineProperty(_this, \"state\", {\n      isAnimationFinished: true,\n      totalLength: 0\n    });\n    _defineProperty(_this, \"generateSimpleStrokeDasharray\", function (totalLength, length) {\n      return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n    });\n    _defineProperty(_this, \"getStrokeDasharray\", function (length, totalLength, lines) {\n      var lineLength = lines.reduce(function (pre, next) {\n        return pre + next;\n      });\n\n      // if lineLength is 0 return the default when no strokeDasharray is provided\n      if (!lineLength) {\n        return _this.generateSimpleStrokeDasharray(totalLength, length);\n      }\n      var count = Math.floor(length / lineLength);\n      var remainLength = length % lineLength;\n      var restLength = totalLength - length;\n      var remainLines = [];\n      for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {\n        if (sum + lines[i] > remainLength) {\n          remainLines = [].concat(_toConsumableArray(lines.slice(0, i)), [remainLength - sum]);\n          break;\n        }\n      }\n      var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n      return [].concat(_toConsumableArray(Line.repeat(lines, count)), _toConsumableArray(remainLines), emptyLines).map(function (line) {\n        return \"\".concat(line, \"px\");\n      }).join(', ');\n    });\n    _defineProperty(_this, \"id\", uniqueId('recharts-line-'));\n    _defineProperty(_this, \"pathRef\", function (node) {\n      _this.mainCurve = node;\n    });\n    _defineProperty(_this, \"handleAnimationEnd\", function () {\n      _this.setState({\n        isAnimationFinished: true\n      });\n      if (_this.props.onAnimationEnd) {\n        _this.props.onAnimationEnd();\n      }\n    });\n    _defineProperty(_this, \"handleAnimationStart\", function () {\n      _this.setState({\n        isAnimationFinished: false\n      });\n      if (_this.props.onAnimationStart) {\n        _this.props.onAnimationStart();\n      }\n    });\n    return _this;\n  }\n  _inherits(Line, _PureComponent);\n  return _createClass(Line, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.isAnimationActive) {\n        return;\n      }\n      var totalLength = this.getTotalLength();\n      this.setState({\n        totalLength: totalLength\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this.props.isAnimationActive) {\n        return;\n      }\n      var totalLength = this.getTotalLength();\n      if (totalLength !== this.state.totalLength) {\n        this.setState({\n          totalLength: totalLength\n        });\n      }\n    }\n  }, {\n    key: \"getTotalLength\",\n    value: function getTotalLength() {\n      var curveDom = this.mainCurve;\n      try {\n        return curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;\n      } catch (err) {\n        return 0;\n      }\n    }\n  }, {\n    key: \"renderErrorBar\",\n    value: function renderErrorBar(needClip, clipPathId) {\n      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n      var _this$props = this.props,\n        points = _this$props.points,\n        xAxis = _this$props.xAxis,\n        yAxis = _this$props.yAxis,\n        layout = _this$props.layout,\n        children = _this$props.children;\n      var errorBarItems = findAllByType(children, ErrorBar);\n      if (!errorBarItems) {\n        return null;\n      }\n      var dataPointFormatter = function dataPointFormatter(dataPoint, dataKey) {\n        return {\n          x: dataPoint.x,\n          y: dataPoint.y,\n          value: dataPoint.value,\n          errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n        };\n      };\n      var errorBarProps = {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null\n      };\n      return /*#__PURE__*/React.createElement(Layer, errorBarProps, errorBarItems.map(function (item) {\n        return /*#__PURE__*/React.cloneElement(item, {\n          key: \"bar-\".concat(item.props.dataKey),\n          data: points,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          layout: layout,\n          dataPointFormatter: dataPointFormatter\n        });\n      }));\n    }\n  }, {\n    key: \"renderDots\",\n    value: function renderDots(needClip, clipDot, clipPathId) {\n      var isAnimationActive = this.props.isAnimationActive;\n      if (isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n      var _this$props2 = this.props,\n        dot = _this$props2.dot,\n        points = _this$props2.points,\n        dataKey = _this$props2.dataKey;\n      var lineProps = filterProps(this.props, false);\n      var customDotProps = filterProps(dot, true);\n      var dots = points.map(function (entry, i) {\n        var dotProps = _objectSpread(_objectSpread(_objectSpread({\n          key: \"dot-\".concat(i),\n          r: 3\n        }, lineProps), customDotProps), {}, {\n          index: i,\n          cx: entry.x,\n          cy: entry.y,\n          value: entry.value,\n          dataKey: dataKey,\n          payload: entry.payload,\n          points: points\n        });\n        return Line.renderDotItem(dot, dotProps);\n      });\n      var dotsProps = {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : null\n      };\n      return /*#__PURE__*/React.createElement(Layer, _extends({\n        className: \"recharts-line-dots\",\n        key: \"dots\"\n      }, dotsProps), dots);\n    }\n  }, {\n    key: \"renderCurveStatically\",\n    value: function renderCurveStatically(points, needClip, clipPathId, props) {\n      var _this$props3 = this.props,\n        type = _this$props3.type,\n        layout = _this$props3.layout,\n        connectNulls = _this$props3.connectNulls,\n        ref = _this$props3.ref,\n        others = _objectWithoutProperties(_this$props3, _excluded);\n      var curveProps = _objectSpread(_objectSpread(_objectSpread({}, filterProps(others, true)), {}, {\n        fill: 'none',\n        className: 'recharts-line-curve',\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null,\n        points: points\n      }, props), {}, {\n        type: type,\n        layout: layout,\n        connectNulls: connectNulls\n      });\n      return /*#__PURE__*/React.createElement(Curve, _extends({}, curveProps, {\n        pathRef: this.pathRef\n      }));\n    }\n  }, {\n    key: \"renderCurveWithAnimation\",\n    value: function renderCurveWithAnimation(needClip, clipPathId) {\n      var _this2 = this;\n      var _this$props4 = this.props,\n        points = _this$props4.points,\n        strokeDasharray = _this$props4.strokeDasharray,\n        isAnimationActive = _this$props4.isAnimationActive,\n        animationBegin = _this$props4.animationBegin,\n        animationDuration = _this$props4.animationDuration,\n        animationEasing = _this$props4.animationEasing,\n        animationId = _this$props4.animationId,\n        animateNewValues = _this$props4.animateNewValues,\n        width = _this$props4.width,\n        height = _this$props4.height;\n      var _this$state = this.state,\n        prevPoints = _this$state.prevPoints,\n        totalLength = _this$state.totalLength;\n      return /*#__PURE__*/React.createElement(Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: \"line-\".concat(animationId),\n        onAnimationEnd: this.handleAnimationEnd,\n        onAnimationStart: this.handleAnimationStart\n      }, function (_ref) {\n        var t = _ref.t;\n        if (prevPoints) {\n          var prevPointsDiffFactor = prevPoints.length / points.length;\n          var stepData = points.map(function (entry, index) {\n            var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n            if (prevPoints[prevPointIndex]) {\n              var prev = prevPoints[prevPointIndex];\n              var interpolatorX = interpolateNumber(prev.x, entry.x);\n              var interpolatorY = interpolateNumber(prev.y, entry.y);\n              return _objectSpread(_objectSpread({}, entry), {}, {\n                x: interpolatorX(t),\n                y: interpolatorY(t)\n              });\n            }\n\n            // magic number of faking previous x and y location\n            if (animateNewValues) {\n              var _interpolatorX = interpolateNumber(width * 2, entry.x);\n              var _interpolatorY = interpolateNumber(height / 2, entry.y);\n              return _objectSpread(_objectSpread({}, entry), {}, {\n                x: _interpolatorX(t),\n                y: _interpolatorY(t)\n              });\n            }\n            return _objectSpread(_objectSpread({}, entry), {}, {\n              x: entry.x,\n              y: entry.y\n            });\n          });\n          return _this2.renderCurveStatically(stepData, needClip, clipPathId);\n        }\n        var interpolator = interpolateNumber(0, totalLength);\n        var curLength = interpolator(t);\n        var currentStrokeDasharray;\n        if (strokeDasharray) {\n          var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(function (num) {\n            return parseFloat(num);\n          });\n          currentStrokeDasharray = _this2.getStrokeDasharray(curLength, totalLength, lines);\n        } else {\n          currentStrokeDasharray = _this2.generateSimpleStrokeDasharray(totalLength, curLength);\n        }\n        return _this2.renderCurveStatically(points, needClip, clipPathId, {\n          strokeDasharray: currentStrokeDasharray\n        });\n      });\n    }\n  }, {\n    key: \"renderCurve\",\n    value: function renderCurve(needClip, clipPathId) {\n      var _this$props5 = this.props,\n        points = _this$props5.points,\n        isAnimationActive = _this$props5.isAnimationActive;\n      var _this$state2 = this.state,\n        prevPoints = _this$state2.prevPoints,\n        totalLength = _this$state2.totalLength;\n      if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !isEqual(prevPoints, points))) {\n        return this.renderCurveWithAnimation(needClip, clipPathId);\n      }\n      return this.renderCurveStatically(points, needClip, clipPathId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _filterProps;\n      var _this$props6 = this.props,\n        hide = _this$props6.hide,\n        dot = _this$props6.dot,\n        points = _this$props6.points,\n        className = _this$props6.className,\n        xAxis = _this$props6.xAxis,\n        yAxis = _this$props6.yAxis,\n        top = _this$props6.top,\n        left = _this$props6.left,\n        width = _this$props6.width,\n        height = _this$props6.height,\n        isAnimationActive = _this$props6.isAnimationActive,\n        id = _this$props6.id;\n      if (hide || !points || !points.length) {\n        return null;\n      }\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var hasSinglePoint = points.length === 1;\n      var layerClass = clsx('recharts-line', className);\n      var needClipX = xAxis && xAxis.allowDataOverflow;\n      var needClipY = yAxis && yAxis.allowDataOverflow;\n      var needClip = needClipX || needClipY;\n      var clipPathId = isNil(id) ? this.id : id;\n      var _ref2 = (_filterProps = filterProps(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n          r: 3,\n          strokeWidth: 2\n        },\n        _ref2$r = _ref2.r,\n        r = _ref2$r === void 0 ? 3 : _ref2$r,\n        _ref2$strokeWidth = _ref2.strokeWidth,\n        strokeWidth = _ref2$strokeWidth === void 0 ? 2 : _ref2$strokeWidth;\n      var _ref3 = hasClipDot(dot) ? dot : {},\n        _ref3$clipDot = _ref3.clipDot,\n        clipDot = _ref3$clipDot === void 0 ? true : _ref3$clipDot;\n      var dotSize = r * 2 + strokeWidth;\n      return /*#__PURE__*/React.createElement(Layer, {\n        className: layerClass\n      }, needClipX || needClipY ? /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n        id: \"clipPath-\".concat(clipPathId)\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        x: needClipX ? left : left - width / 2,\n        y: needClipY ? top : top - height / 2,\n        width: needClipX ? width : width * 2,\n        height: needClipY ? height : height * 2\n      })), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n        id: \"clipPath-dots-\".concat(clipPathId)\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        x: left - dotSize / 2,\n        y: top - dotSize / 2,\n        width: width + dotSize,\n        height: height + dotSize\n      }))) : null, !hasSinglePoint && this.renderCurve(needClip, clipPathId), this.renderErrorBar(needClip, clipPathId), (hasSinglePoint || dot) && this.renderDots(needClip, clipDot, clipPathId), (!isAnimationActive || isAnimationFinished) && LabelList.renderCallByParent(this.props, points));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.animationId !== prevState.prevAnimationId) {\n        return {\n          prevAnimationId: nextProps.animationId,\n          curPoints: nextProps.points,\n          prevPoints: prevState.curPoints\n        };\n      }\n      if (nextProps.points !== prevState.curPoints) {\n        return {\n          curPoints: nextProps.points\n        };\n      }\n      return null;\n    }\n  }, {\n    key: \"repeat\",\n    value: function repeat(lines, count) {\n      var linesUnit = lines.length % 2 !== 0 ? [].concat(_toConsumableArray(lines), [0]) : lines;\n      var result = [];\n      for (var i = 0; i < count; ++i) {\n        result = [].concat(_toConsumableArray(result), _toConsumableArray(linesUnit));\n      }\n      return result;\n    }\n  }, {\n    key: \"renderDotItem\",\n    value: function renderDotItem(option, props) {\n      var dotItem;\n      if ( /*#__PURE__*/React.isValidElement(option)) {\n        dotItem = /*#__PURE__*/React.cloneElement(option, props);\n      } else if (isFunction(option)) {\n        dotItem = option(props);\n      } else {\n        var key = props.key,\n          dotProps = _objectWithoutProperties(props, _excluded2);\n        var className = clsx('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n        dotItem = /*#__PURE__*/React.createElement(Dot, _extends({\n          key: key\n        }, dotProps, {\n          className: className\n        }));\n      }\n      return dotItem;\n    }\n  }]);\n}(PureComponent);\n_defineProperty(Line, \"displayName\", 'Line');\n_defineProperty(Line, \"defaultProps\", {\n  xAxisId: 0,\n  yAxisId: 0,\n  connectNulls: false,\n  activeDot: true,\n  dot: true,\n  legendType: 'line',\n  stroke: '#3182bd',\n  strokeWidth: 1,\n  fill: '#fff',\n  points: [],\n  isAnimationActive: !Global.isSsr,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  hide: false,\n  label: false\n});\n/**\n * Compose the data of each group\n * @param {Object} props The props from the component\n * @param  {Object} xAxis   The configuration of x-axis\n * @param  {Object} yAxis   The configuration of y-axis\n * @param  {String} dataKey The unique key of a group\n * @return {Array}  Composed data\n */\n_defineProperty(Line, \"getComposedData\", function (_ref4) {\n  var props = _ref4.props,\n    xAxis = _ref4.xAxis,\n    yAxis = _ref4.yAxis,\n    xAxisTicks = _ref4.xAxisTicks,\n    yAxisTicks = _ref4.yAxisTicks,\n    dataKey = _ref4.dataKey,\n    bandSize = _ref4.bandSize,\n    displayedData = _ref4.displayedData,\n    offset = _ref4.offset;\n  var layout = props.layout;\n  var points = displayedData.map(function (entry, index) {\n    var value = getValueByDataKey(entry, dataKey);\n    if (layout === 'horizontal') {\n      return {\n        x: getCateCoordinateOfLine({\n          axis: xAxis,\n          ticks: xAxisTicks,\n          bandSize: bandSize,\n          entry: entry,\n          index: index\n        }),\n        y: isNil(value) ? null : yAxis.scale(value),\n        value: value,\n        payload: entry\n      };\n    }\n    return {\n      x: isNil(value) ? null : xAxis.scale(value),\n      y: getCateCoordinateOfLine({\n        axis: yAxis,\n        ticks: yAxisTicks,\n        bandSize: bandSize,\n        entry: entry,\n        index: index\n      }),\n      value: value,\n      payload: entry\n    };\n  });\n  return _objectSpread({\n    points: points,\n    layout: layout\n  }, offset);\n});","/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","// src/utils/sleepCalculator.ts\r\nimport { SleepLogEntry, SleepQualityMetrics, SleepRecoveryData } from '@/types/Sleep_Log';\r\n\r\nexport interface SleepInsight {\r\n  type: 'positive' | 'warning' | 'info';\r\n  insight: string;\r\n  recommendation: string;\r\n}\r\n\r\n/**\r\n * Calculate sleep quality metrics from sleep logs\r\n */\r\nexport function calculateSleepMetrics(sleepLogs: SleepLogEntry[], daysToConsider: number = 7): SleepQualityMetrics {\r\n  if (!sleepLogs || sleepLogs.length === 0) {\r\n    return {\r\n      averageDuration: 0,\r\n      averageQuality: 0,\r\n      averageTimeToSleep: 0,\r\n      averageWakeUps: 0,\r\n      sleepEfficiency: 0,\r\n      consistencyScore: 0\r\n    };\r\n  }\r\n\r\n  // Filter recent logs\r\n  const cutoffDate = new Date();\r\n  cutoffDate.setDate(cutoffDate.getDate() - daysToConsider);\r\n  \r\n  const recentLogs = sleepLogs.filter(log => {\r\n    const logDate = new Date(log.date);\r\n    return logDate >= cutoffDate;\r\n  });\r\n\r\n  if (recentLogs.length === 0) {\r\n    return {\r\n      averageDuration: 0,\r\n      averageQuality: 0,\r\n      averageTimeToSleep: 0,\r\n      averageWakeUps: 0,\r\n      sleepEfficiency: 0,\r\n      consistencyScore: 0\r\n    };\r\n  }\r\n\r\n  // Calculate averages\r\n  const totalDuration = recentLogs.reduce((sum, log) => sum + log.sleepDuration, 0);\r\n  const totalQuality = recentLogs.reduce((sum, log) => sum + log.sleepQuality, 0);\r\n  const totalTimeToSleep = recentLogs.reduce((sum, log) => sum + log.timeToFallAsleep, 0);\r\n  const totalWakeUps = recentLogs.reduce((sum, log) => sum + log.timesWokenUp, 0);\r\n\r\n  const averageDuration = totalDuration / recentLogs.length;\r\n  const averageQuality = totalQuality / recentLogs.length;\r\n  const averageTimeToSleep = totalTimeToSleep / recentLogs.length;\r\n  const averageWakeUps = totalWakeUps / recentLogs.length;\r\n\r\n  // Calculate sleep efficiency (time asleep vs time in bed)\r\n  let totalEfficiency = 0;\r\n  recentLogs.forEach(log => {\r\n    const timeInBed = calculateTimeInBed(log.bedTime, log.wakeTime);\r\n    const efficiency = timeInBed > 0 ? (log.sleepDuration / timeInBed) * 100 : 0;\r\n    totalEfficiency += efficiency;\r\n  });\r\n  const sleepEfficiency = totalEfficiency / recentLogs.length;\r\n\r\n  // Calculate consistency score based on sleep/wake time variance\r\n  const consistencyScore = calculateSleepConsistency(recentLogs);\r\n\r\n  return {\r\n    averageDuration: Math.round(averageDuration * 100) / 100,\r\n    averageQuality: Math.round(averageQuality * 100) / 100,\r\n    averageTimeToSleep: Math.round(averageTimeToSleep),\r\n    averageWakeUps: Math.round(averageWakeUps * 100) / 100,\r\n    sleepEfficiency: Math.round(sleepEfficiency),\r\n    consistencyScore: Math.round(consistencyScore)\r\n  };\r\n}\r\n\r\n/**\r\n * Calculate sleep recovery impact for muscle fatigue\r\n */\r\nexport function calculateSleepRecoveryImpact(sleepLogs: SleepLogEntry[], targetDate: string): SleepRecoveryData | null {\r\n  const sleepLog = sleepLogs.find(log => log.date === targetDate);\r\n  \r\n  if (!sleepLog) {\r\n    return null;\r\n  }\r\n\r\n  // Calculate recovery score based on duration and quality\r\n  // Optimal sleep: 7-9 hours with quality 4-5\r\n  let recoveryScore = 0;\r\n  \r\n  // Duration component (0-50 points)\r\n  const durationScore = calculateDurationScore(sleepLog.sleepDuration);\r\n  \r\n  // Quality component (0-30 points) \r\n  const qualityScore = (sleepLog.sleepQuality / 5) * 30;\r\n  \r\n  // Efficiency component (0-20 points)\r\n  const timeInBed = calculateTimeInBed(sleepLog.bedTime, sleepLog.wakeTime);\r\n  const efficiency = timeInBed > 0 ? (sleepLog.sleepDuration / timeInBed) : 0;\r\n  const efficiencyScore = Math.min(efficiency * 20, 20);\r\n\r\n  recoveryScore = durationScore + qualityScore + efficiencyScore;\r\n  \r\n  // Calculate fatigue reduction percentage based on recovery score\r\n  // Good sleep (80+ score) can reduce fatigue by up to 25%\r\n  // Poor sleep (40- score) might only reduce fatigue by 5%\r\n  const fatigueReduction = Math.max(5, Math.min(25, (recoveryScore / 100) * 25));\r\n\r\n  return {\r\n    date: targetDate,\r\n    sleepDuration: sleepLog.sleepDuration,\r\n    sleepQuality: sleepLog.sleepQuality,\r\n    recoveryScore: Math.round(recoveryScore),\r\n    fatigueReduction: Math.round(fatigueReduction * 100) / 100\r\n  };\r\n}\r\n\r\n/**\r\n * Get sleep quality insights and recommendations\r\n */\r\nexport function generateSleepInsights(sleepLogs: SleepLogEntry[], daysToConsider: number = 7): SleepInsight[] {\r\n  const metrics = calculateSleepMetrics(sleepLogs, daysToConsider);\r\n  const insights: SleepInsight[] = [];\r\n\r\n  // Duration insights\r\n  if (metrics.averageDuration < 6) {\r\n    insights.push({\r\n      type: 'warning',\r\n      insight: \"You're getting less than 6 hours of sleep on average\",\r\n      recommendation: \"Aim for 7-9 hours for optimal recovery and performance\"\r\n    });\r\n  } else if (metrics.averageDuration < 7) {\r\n    insights.push({\r\n      type: 'info',\r\n      insight: \"Your sleep duration is below the recommended range\",\r\n      recommendation: \"Consider getting more sleep. 7-9 hours is ideal for muscle recovery\"\r\n    });\r\n  } else if (metrics.averageDuration > 9) {\r\n    insights.push({\r\n      type: 'info',\r\n      insight: \"You might be oversleeping\",\r\n      recommendation: \"7-9 hours is typically optimal for most adults\"\r\n    });\r\n  } else {\r\n    insights.push({\r\n      type: 'positive',\r\n      insight: \"Great sleep duration!\",\r\n      recommendation: \"You're getting an optimal amount of sleep for recovery\"\r\n    });\r\n  }\r\n\r\n  // Quality insights\r\n  if (metrics.averageQuality < 3) {\r\n    insights.push({\r\n      type: 'warning',\r\n      insight: \"Your sleep quality is below average\",\r\n      recommendation: \"Consider improving sleep hygiene or consulting a healthcare provider\"\r\n    });\r\n  } else if (metrics.averageQuality >= 4) {\r\n    insights.push({\r\n      type: 'positive',\r\n      insight: \"Excellent sleep quality!\",\r\n      recommendation: \"This supports great muscle recovery and performance\"\r\n    });\r\n  }\r\n\r\n  // Time to fall asleep insights\r\n  if (metrics.averageTimeToSleep > 30) {\r\n    insights.push({\r\n      type: 'warning',\r\n      insight: \"It's taking you more than 30 minutes to fall asleep\",\r\n      recommendation: \"Consider a bedtime routine or relaxation techniques\"\r\n    });\r\n  }\r\n\r\n  // Wake-ups insights\r\n  if (metrics.averageWakeUps > 2) {\r\n    insights.push({\r\n      type: 'warning',\r\n      insight: \"You're waking up frequently during the night\",\r\n      recommendation: \"This can impact recovery quality - consider sleep environment improvements\"\r\n    });\r\n  }\r\n\r\n  // Efficiency insights\r\n  if (metrics.sleepEfficiency < 85) {\r\n    insights.push({\r\n      type: 'info',\r\n      insight: \"Your sleep efficiency is below 85%\",\r\n      recommendation: \"Try to limit time in bed to actual sleep time\"\r\n    });\r\n  }\r\n\r\n  // Consistency insights\r\n  if (metrics.consistencyScore < 70) {\r\n    insights.push({\r\n      type: 'warning',\r\n      insight: \"Your sleep schedule varies significantly\",\r\n      recommendation: \"Try to maintain consistent bed and wake times\"\r\n    });\r\n  }\r\n\r\n  return insights;\r\n}\r\n\r\n// Helper functions\r\nfunction calculateTimeInBed(bedTime: string, wakeTime: string): number {\r\n  const [bedHour, bedMin] = bedTime.split(':').map(Number);\r\n  const [wakeHour, wakeMin] = wakeTime.split(':').map(Number);\r\n  \r\n  const bedTimeMinutes = bedHour * 60 + bedMin;\r\n  let wakeTimeMinutes = wakeHour * 60 + wakeMin;\r\n  \r\n  // Handle overnight sleep\r\n  if (wakeTimeMinutes < bedTimeMinutes) {\r\n    wakeTimeMinutes += 24 * 60; // Add 24 hours\r\n  }\r\n  \r\n  return (wakeTimeMinutes - bedTimeMinutes) / 60; // Return hours\r\n}\r\n\r\nfunction calculateDurationScore(duration: number): number {\r\n  // Optimal range: 7-9 hours gets full points (50)\r\n  if (duration >= 7 && duration <= 9) {\r\n    return 50;\r\n  } else if (duration >= 6 && duration < 7) {\r\n    return 35; // Slightly short\r\n  } else if (duration > 9 && duration <= 10) {\r\n    return 35; // Slightly long\r\n  } else if (duration >= 5 && duration < 6) {\r\n    return 20; // Short\r\n  } else if (duration > 10 && duration <= 11) {\r\n    return 20; // Long\r\n  } else {\r\n    return 10; // Very short or very long\r\n  }\r\n}\r\n\r\nfunction calculateSleepConsistency(logs: SleepLogEntry[]): number {\r\n  if (logs.length < 2) return 100;\r\n\r\n  // Calculate variance in sleep and wake times\r\n  const sleepTimes = logs.map(log => timeToMinutes(log.sleepTime));\r\n  const wakeTimes = logs.map(log => timeToMinutes(log.wakeTime));\r\n\r\n  const sleepVariance = calculateTimeVariance(sleepTimes);\r\n  const wakeVariance = calculateTimeVariance(wakeTimes);\r\n\r\n  // Lower variance = higher consistency score\r\n  // Perfect consistency (0 variance) = 100 points\r\n  // High variance (>60 minutes) = low score\r\n  const sleepConsistency = Math.max(0, 100 - (sleepVariance / 60) * 50);\r\n  const wakeConsistency = Math.max(0, 100 - (wakeVariance / 60) * 50);\r\n\r\n  return (sleepConsistency + wakeConsistency) / 2;\r\n}\r\n\r\nfunction timeToMinutes(time: string): number {\r\n  const [hour, min] = time.split(':').map(Number);\r\n  return hour * 60 + min;\r\n}\r\n\r\nfunction calculateTimeVariance(times: number[]): number {\r\n  if (times.length < 2) return 0;\r\n  \r\n  const mean = times.reduce((sum, time) => sum + time, 0) / times.length;\r\n  const squaredDiffs = times.map(time => Math.pow(time - mean, 2));\r\n  const variance = squaredDiffs.reduce((sum, diff) => sum + diff, 0) / times.length;\r\n  \r\n  return Math.sqrt(variance); // Return standard deviation in minutes\r\n}\r\n","import { create } from 'zustand';\r\nimport { persist, createJSONStorage } from 'zustand/middleware';\r\nimport { SleepLogEntry } from '@/types/Sleep_Log';\r\nimport {\r\n  readSpreadsheetData,\r\n  createSpreadsheetRow,\r\n  updateSpreadsheetRow,\r\n  deleteSpreadsheetRow,\r\n  GenericSheetRowData,\r\n} from '@/lib/spreadsheetAPI';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface SleepLogState {\r\n  sleepLogs: SleepLogEntry[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  isDataFetched: boolean;\r\n  fetchSleepLogs: (forceRefresh?: boolean) => Promise<void>;\r\n  addSleepLog: (newLog: Omit<SleepLogEntry, 'id' | 'rowIndex'>) => Promise<SleepLogEntry | null>;\r\n  editSleepLog: (updatedLog: SleepLogEntry) => Promise<void>;\r\n  removeSleepLog: (logId: string) => Promise<void>;\r\n  syncPendingSleepLogs: () => Promise<void>;\r\n  getSleepMetrics: (daysToConsider?: number) => {\r\n    averageDuration: number;\r\n    averageQuality: number;\r\n    averageTimeToSleep: number;\r\n    averageWakeUps: number;\r\n    sleepEfficiency: number;\r\n    consistencyScore: number;\r\n  };\r\n}\r\n\r\nconst SLEEP_SHEET_NAME = 'Sleep_Log';\r\n\r\nexport const useSleepLogs = create<SleepLogState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      sleepLogs: [],\r\n      isLoading: false,\r\n      error: null,\r\n      isDataFetched: false,\r\n\r\n      fetchSleepLogs: async (forceRefresh = false) => {\r\n        const state = get();\r\n        \r\n        // Skip fetch if data is already loaded and no force refresh\r\n        if (state.isDataFetched && !forceRefresh) {\r\n          return;\r\n        }\r\n\r\n        set({ isLoading: true, error: null });\r\n\r\n        try {\r\n          const response = await readSpreadsheetData(SLEEP_SHEET_NAME);\r\n          \r\n          if (response.success && response.data) {            const sleepLogs: SleepLogEntry[] = response.data.map((row: GenericSheetRowData, index: number) => {\r\n              // Expected columns: Date, BedTime, SleepTime, WakeTime, SleepDuration, SleepQuality, TimeToFallAsleep, TimesWokenUp, SleepNotes, ID\r\n              \r\n              return {\r\n                id: String(row['ID'] || row['id'] || uuidv4()),\r\n                date: String(row['Date'] || row['date'] || ''),\r\n                bedTime: String(row['BedTime'] || row['bedTime'] || ''),\r\n                sleepTime: String(row['SleepTime'] || row['sleepTime'] || ''),\r\n                wakeTime: String(row['WakeTime'] || row['wakeTime'] || ''),\r\n                sleepDuration: parseFloat(String(row['SleepDuration'] || row['sleepDuration'] || '0')) || 0,\r\n                sleepQuality: parseInt(String(row['SleepQuality'] || row['sleepQuality'] || '1')) || 1,\r\n                timeToFallAsleep: parseInt(String(row['TimeToFallAsleep'] || row['timeToFallAsleep'] || '0')) || 0,\r\n                timesWokenUp: parseInt(String(row['TimesWokenUp'] || row['timesWokenUp'] || '0')) || 0,\r\n                sleepNotes: String(row['SleepNotes'] || row['sleepNotes'] || ''),\r\n                rowIndex: index + 2, // +2 because sheets are 1-indexed and we skip header\r\n                isSynced: true,\r\n                pendingAction: null,\r\n              };\r\n            });\r\n\r\n            set({ \r\n              sleepLogs,\r\n              isLoading: false,\r\n              isDataFetched: true \r\n            });\r\n          } else {\r\n            throw new Error(response.error || 'Failed to fetch sleep logs');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching sleep logs:', error);\r\n          set({ \r\n            error: error instanceof Error ? error.message : 'Failed to fetch sleep logs',\r\n            isLoading: false \r\n          });\r\n        }\r\n      },\r\n\r\n      addSleepLog: async (newLogData) => {\r\n        const newLog: SleepLogEntry = {\r\n          ...newLogData,\r\n          id: uuidv4(),\r\n          isSynced: false,\r\n          pendingAction: 'add',\r\n        };\r\n\r\n        // Add to local state immediately\r\n        set(state => ({\r\n          sleepLogs: [...state.sleepLogs, newLog],\r\n          error: null\r\n        }));        // Try to sync to spreadsheet\r\n        try {\r\n          const rowData: GenericSheetRowData = {\r\n            ID: newLog.id,\r\n            Date: newLog.date,\r\n            BedTime: newLog.bedTime,\r\n            SleepTime: newLog.sleepTime,\r\n            WakeTime: newLog.wakeTime,\r\n            SleepDuration: newLog.sleepDuration.toString(),\r\n            SleepQuality: newLog.sleepQuality.toString(),\r\n            TimeToFallAsleep: newLog.timeToFallAsleep.toString(),\r\n            TimesWokenUp: newLog.timesWokenUp.toString(),\r\n            SleepNotes: newLog.sleepNotes || '',\r\n          };\r\n\r\n          const response = await createSpreadsheetRow(SLEEP_SHEET_NAME, rowData);\r\n            if (response.success) {\r\n            // Update the log as synced\r\n            set(state => ({\r\n              sleepLogs: state.sleepLogs.map(log =>\r\n                log.id === newLog.id\r\n                  ? { ...log, isSynced: true, pendingAction: null }\r\n                  : log\r\n              )\r\n            }));\r\n          }\r\n\r\n          return newLog;\r\n        } catch (error) {\r\n          console.error('Error syncing new sleep log:', error);\r\n          return newLog; // Return the log even if sync failed\r\n        }\r\n      },\r\n\r\n      editSleepLog: async (updatedLog) => {\r\n        // Update local state immediately\r\n        set(state => ({\r\n          sleepLogs: state.sleepLogs.map(log =>\r\n            log.id === updatedLog.id\r\n              ? { ...updatedLog, isSynced: false, pendingAction: 'update' }\r\n              : log\r\n          ),\r\n          error: null\r\n        }));        // Try to sync to spreadsheet\r\n        try {\r\n          if (updatedLog.rowIndex) {\r\n            const rowData: GenericSheetRowData = {\r\n              ID: updatedLog.id,\r\n              Date: updatedLog.date,\r\n              BedTime: updatedLog.bedTime,\r\n              SleepTime: updatedLog.sleepTime,\r\n              WakeTime: updatedLog.wakeTime,\r\n              SleepDuration: updatedLog.sleepDuration.toString(),\r\n              SleepQuality: updatedLog.sleepQuality.toString(),\r\n              TimeToFallAsleep: updatedLog.timeToFallAsleep.toString(),\r\n              TimesWokenUp: updatedLog.timesWokenUp.toString(),\r\n              SleepNotes: updatedLog.sleepNotes || '',\r\n            };\r\n\r\n            const response = await updateSpreadsheetRow(SLEEP_SHEET_NAME, updatedLog.rowIndex, rowData);\r\n            \r\n            if (response.success) {\r\n              // Mark as synced\r\n              set(state => ({\r\n                sleepLogs: state.sleepLogs.map(log =>\r\n                  log.id === updatedLog.id\r\n                    ? { ...log, isSynced: true, pendingAction: null }\r\n                    : log\r\n                )\r\n              }));\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error syncing updated sleep log:', error);\r\n        }\r\n      },\r\n\r\n      removeSleepLog: async (logId) => {\r\n        const state = get();\r\n        const logToRemove = state.sleepLogs.find(log => log.id === logId);\r\n\r\n        // Remove from local state immediately\r\n        set(state => ({\r\n          sleepLogs: state.sleepLogs.filter(log => log.id !== logId),\r\n          error: null\r\n        }));\r\n\r\n        // Try to sync deletion to spreadsheet\r\n        try {\r\n          if (logToRemove?.rowIndex) {\r\n            await deleteSpreadsheetRow(SLEEP_SHEET_NAME, logToRemove.rowIndex);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error syncing sleep log deletion:', error);\r\n        }\r\n      },\r\n\r\n      syncPendingSleepLogs: async () => {\r\n        const state = get();\r\n        const pendingLogs = state.sleepLogs.filter(log => !log.isSynced);\r\n\r\n        if (pendingLogs.length === 0) return;\r\n\r\n        set({ isLoading: true });        try {\r\n          for (const log of pendingLogs) {\r\n            const rowData: GenericSheetRowData = {\r\n              ID: log.id,\r\n              Date: log.date,\r\n              BedTime: log.bedTime,\r\n              SleepTime: log.sleepTime,\r\n              WakeTime: log.wakeTime,\r\n              SleepDuration: log.sleepDuration.toString(),\r\n              SleepQuality: log.sleepQuality.toString(),\r\n              TimeToFallAsleep: log.timeToFallAsleep.toString(),\r\n              TimesWokenUp: log.timesWokenUp.toString(),\r\n              SleepNotes: log.sleepNotes || '',\r\n            };\r\n\r\n            if (log.pendingAction === 'add') {\r\n              const response = await createSpreadsheetRow(SLEEP_SHEET_NAME, rowData);\r\n              if (response.success) {\r\n                set(state => ({\r\n                  sleepLogs: state.sleepLogs.map(l =>\r\n                    l.id === log.id\r\n                      ? { ...l, isSynced: true, pendingAction: null }\r\n                      : l\r\n                  )\r\n                }));\r\n              }\r\n            } else if (log.pendingAction === 'update' && log.rowIndex) {\r\n              const response = await updateSpreadsheetRow(SLEEP_SHEET_NAME, log.rowIndex, rowData);\r\n              if (response.success) {\r\n                set(state => ({\r\n                  sleepLogs: state.sleepLogs.map(l =>\r\n                    l.id === log.id\r\n                      ? { ...l, isSynced: true, pendingAction: null }\r\n                      : l\r\n                  )\r\n                }));\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error syncing pending sleep logs:', error);\r\n          set({ error: 'Failed to sync pending changes' });\r\n        } finally {\r\n          set({ isLoading: false });\r\n        }\r\n      },\r\n\r\n      getSleepMetrics: (daysToConsider = 7) => {\r\n        const state = get();\r\n        const logs = state.sleepLogs;\r\n        \r\n        if (!logs || logs.length === 0) {\r\n          return {\r\n            averageDuration: 0,\r\n            averageQuality: 0,\r\n            averageTimeToSleep: 0,\r\n            averageWakeUps: 0,\r\n            sleepEfficiency: 0,\r\n            consistencyScore: 0\r\n          };\r\n        }\r\n\r\n        // Filter recent logs\r\n        const cutoffDate = new Date();\r\n        cutoffDate.setDate(cutoffDate.getDate() - daysToConsider);\r\n        \r\n        const recentLogs = logs.filter(log => {\r\n          const logDate = new Date(log.date);\r\n          return logDate >= cutoffDate;\r\n        });\r\n\r\n        if (recentLogs.length === 0) {\r\n          return {\r\n            averageDuration: 0,\r\n            averageQuality: 0,\r\n            averageTimeToSleep: 0,\r\n            averageWakeUps: 0,\r\n            sleepEfficiency: 0,\r\n            consistencyScore: 0\r\n          };\r\n        }\r\n\r\n        // Calculate averages\r\n        const totalDuration = recentLogs.reduce((sum, log) => sum + log.sleepDuration, 0);\r\n        const totalQuality = recentLogs.reduce((sum, log) => sum + log.sleepQuality, 0);\r\n        const totalTimeToSleep = recentLogs.reduce((sum, log) => sum + log.timeToFallAsleep, 0);\r\n        const totalWakeUps = recentLogs.reduce((sum, log) => sum + log.timesWokenUp, 0);\r\n\r\n        const averageDuration = totalDuration / recentLogs.length;\r\n        const averageQuality = totalQuality / recentLogs.length;\r\n        const averageTimeToSleep = totalTimeToSleep / recentLogs.length;\r\n        const averageWakeUps = totalWakeUps / recentLogs.length;\r\n\r\n        // Calculate sleep efficiency (time asleep vs time in bed)\r\n        let totalEfficiency = 0;\r\n        recentLogs.forEach(log => {\r\n          const bedTime = new Date(`1970-01-01T${log.bedTime}:00`);\r\n          const wakeTime = new Date(`1970-01-01T${log.wakeTime}:00`);\r\n          \r\n          // Handle next day wake time\r\n          if (wakeTime < bedTime) {\r\n            wakeTime.setDate(wakeTime.getDate() + 1);\r\n          }\r\n          \r\n          const timeInBed = (wakeTime.getTime() - bedTime.getTime()) / (1000 * 60 * 60); // hours\r\n          const efficiency = timeInBed > 0 ? (log.sleepDuration / timeInBed) * 100 : 0;\r\n          totalEfficiency += efficiency;\r\n        });\r\n        \r\n        const sleepEfficiency = totalEfficiency / recentLogs.length;\r\n\r\n        // Calculate consistency score based on bedtime and wake time variance\r\n        const bedTimes = recentLogs.map(log => {\r\n          const time = new Date(`1970-01-01T${log.bedTime}:00`);\r\n          return time.getHours() + time.getMinutes() / 60;\r\n        });\r\n        \r\n        const wakeTimes = recentLogs.map(log => {\r\n          const time = new Date(`1970-01-01T${log.wakeTime}:00`);\r\n          return time.getHours() + time.getMinutes() / 60;\r\n        });\r\n\r\n        const bedTimeVariance = bedTimes.reduce((sum, time) => {\r\n          const avgBedTime = bedTimes.reduce((s, t) => s + t, 0) / bedTimes.length;\r\n          return sum + Math.pow(time - avgBedTime, 2);\r\n        }, 0) / bedTimes.length;\r\n\r\n        const wakeTimeVariance = wakeTimes.reduce((sum, time) => {\r\n          const avgWakeTime = wakeTimes.reduce((s, t) => s + t, 0) / wakeTimes.length;\r\n          return sum + Math.pow(time - avgWakeTime, 2);\r\n        }, 0) / wakeTimes.length;\r\n\r\n        // Consistency score: lower variance = higher consistency (0-100 scale)\r\n        const consistencyScore = Math.max(0, 100 - (bedTimeVariance + wakeTimeVariance) * 10);\r\n\r\n        return {\r\n          averageDuration: Math.round(averageDuration * 100) / 100,\r\n          averageQuality: Math.round(averageQuality * 100) / 100,\r\n          averageTimeToSleep: Math.round(averageTimeToSleep),\r\n          averageWakeUps: Math.round(averageWakeUps * 100) / 100,\r\n          sleepEfficiency: Math.round(sleepEfficiency * 100) / 100,\r\n          consistencyScore: Math.round(consistencyScore * 100) / 100\r\n        };\r\n      },\r\n    }),\r\n    {\r\n      name: 'sleep-logs-store',\r\n      storage: createJSONStorage(() => localStorage),\r\n      partialize: (state) => ({\r\n        sleepLogs: state.sleepLogs,\r\n        isDataFetched: state.isDataFetched,\r\n      }),\r\n    }\r\n  )\r\n);\r\n","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\r\n  return (\r\n    <textarea\r\n      data-slot=\"textarea\"\r\n      className={cn(\r\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Textarea }\r\n","import React, { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { Plus, Moon, Save, X } from 'lucide-react';\r\nimport { SleepLogEntry } from '@/types/Sleep_Log';\r\nimport { useSleepLogs } from '@/store/sleepLogStore';\r\n\r\ninterface SleepLogFormProps {\r\n  editingLog?: SleepLogEntry | null;\r\n  onClose?: () => void;\r\n  onSuccess?: () => void;\r\n}\r\n\r\nexport const SleepLogForm: React.FC<SleepLogFormProps> = ({ \r\n  editingLog = null, \r\n  onClose,\r\n  onSuccess \r\n}) => {\r\n  const { addSleepLog, editSleepLog } = useSleepLogs();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    date: editingLog?.date || new Date().toISOString().split('T')[0],\r\n    bedTime: editingLog?.bedTime || '22:00',\r\n    sleepTime: editingLog?.sleepTime || '22:30',\r\n    wakeTime: editingLog?.wakeTime || '07:00',\r\n    sleepDuration: editingLog?.sleepDuration || 8,\r\n    sleepQuality: editingLog?.sleepQuality || 3,\r\n    timeToFallAsleep: editingLog?.timeToFallAsleep || 30,\r\n    timesWokenUp: editingLog?.timesWokenUp || 1,\r\n    sleepNotes: editingLog?.sleepNotes || ''\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleInputChange = (field: string, value: string | number) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const calculateSleepDuration = (bedTime: string, wakeTime: string): number => {\r\n    const bed = new Date(`1970-01-01T${bedTime}:00`);\r\n    const wake = new Date(`1970-01-01T${wakeTime}:00`);\r\n    \r\n    // Handle next day wake time\r\n    if (wake < bed) {\r\n      wake.setDate(wake.getDate() + 1);\r\n    }\r\n    \r\n    const diffMs = wake.getTime() - bed.getTime();\r\n    return Math.round((diffMs / (1000 * 60 * 60)) * 100) / 100; // Round to 2 decimal places\r\n  };\r\n\r\n  const handleTimeChange = (field: 'bedTime' | 'sleepTime' | 'wakeTime', value: string) => {\r\n    const newFormData = { ...formData, [field]: value };\r\n    \r\n    // Auto-calculate sleep duration when bedTime or wakeTime changes\r\n    if (field === 'bedTime' || field === 'wakeTime') {\r\n      newFormData.sleepDuration = calculateSleepDuration(\r\n        field === 'bedTime' ? value : formData.bedTime,\r\n        field === 'wakeTime' ? value : formData.wakeTime\r\n      );\r\n    }\r\n    \r\n    setFormData(newFormData);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      if (editingLog) {\r\n        await editSleepLog({\r\n          ...editingLog,\r\n          ...formData\r\n        });\r\n      } else {\r\n        await addSleepLog(formData);\r\n      }\r\n      \r\n      onSuccess?.();\r\n      onClose?.();\r\n    } catch (error) {\r\n      console.error('Error saving sleep log:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getQualityLabel = (quality: number) => {\r\n    const labels = ['Very Poor', 'Poor', 'Fair', 'Good', 'Excellent'];\r\n    return labels[quality - 1] || 'Fair';\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-2xl mx-auto\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center\">\r\n          <Moon className=\"h-5 w-5 mr-2 text-blue-500\" />\r\n          {editingLog ? 'Edit Sleep Log' : 'Log Sleep'}\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {/* Date */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"date\">Date</Label>\r\n            <Input\r\n              id=\"date\"\r\n              type=\"date\"\r\n              value={formData.date}\r\n              onChange={(e) => handleInputChange('date', e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Sleep Times */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"bedTime\">Bedtime</Label>\r\n              <Input\r\n                id=\"bedTime\"\r\n                type=\"time\"\r\n                value={formData.bedTime}\r\n                onChange={(e) => handleTimeChange('bedTime', e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"sleepTime\">Sleep Time</Label>\r\n              <Input\r\n                id=\"sleepTime\"\r\n                type=\"time\"\r\n                value={formData.sleepTime}\r\n                onChange={(e) => handleTimeChange('sleepTime', e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"wakeTime\">Wake Time</Label>\r\n              <Input\r\n                id=\"wakeTime\"\r\n                type=\"time\"\r\n                value={formData.wakeTime}\r\n                onChange={(e) => handleTimeChange('wakeTime', e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sleep Duration */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"sleepDuration\">Sleep Duration (hours)</Label>\r\n            <Input\r\n              id=\"sleepDuration\"\r\n              type=\"number\"\r\n              step=\"0.1\"\r\n              min=\"0\"\r\n              max=\"24\"\r\n              value={formData.sleepDuration}\r\n              onChange={(e) => handleInputChange('sleepDuration', parseFloat(e.target.value) || 0)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Sleep Quality */}\r\n          <div className=\"space-y-3\">\r\n            <Label>Sleep Quality: {getQualityLabel(formData.sleepQuality)}</Label>\r\n            <Slider\r\n              value={[formData.sleepQuality]}\r\n              onValueChange={(value) => handleInputChange('sleepQuality', value[0])}\r\n              min={1}\r\n              max={5}\r\n              step={1}\r\n              className=\"w-full\"\r\n            />\r\n            <div className=\"flex justify-between text-xs text-muted-foreground\">\r\n              <span>Very Poor</span>\r\n              <span>Poor</span>\r\n              <span>Fair</span>\r\n              <span>Good</span>\r\n              <span>Excellent</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sleep Metrics */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"timeToFallAsleep\">Time to Fall Asleep (minutes)</Label>\r\n              <Input\r\n                id=\"timeToFallAsleep\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"300\"\r\n                value={formData.timeToFallAsleep}\r\n                onChange={(e) => handleInputChange('timeToFallAsleep', parseInt(e.target.value) || 0)}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"timesWokenUp\">Times Woken Up</Label>\r\n              <Input\r\n                id=\"timesWokenUp\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"20\"\r\n                value={formData.timesWokenUp}\r\n                onChange={(e) => handleInputChange('timesWokenUp', parseInt(e.target.value) || 0)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sleep Notes */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"sleepNotes\">Sleep Notes (optional)</Label>\r\n            <Textarea\r\n              id=\"sleepNotes\"\r\n              placeholder=\"How did you sleep? Any factors affecting your sleep...\"\r\n              value={formData.sleepNotes}\r\n              onChange={(e) => handleInputChange('sleepNotes', e.target.value)}\r\n              rows={3}\r\n            />\r\n          </div>\r\n\r\n          {/* Form Actions */}\r\n          <div className=\"flex gap-2 pt-4\">\r\n            <Button type=\"submit\" disabled={isSubmitting} className=\"flex-1\">\r\n              <Save className=\"h-4 w-4 mr-2\" />\r\n              {isSubmitting ? 'Saving...' : editingLog ? 'Update Sleep Log' : 'Save Sleep Log'}\r\n            </Button>\r\n            {onClose && (\r\n              <Button type=\"button\" variant=\"outline\" onClick={onClose}>\r\n                <X className=\"h-4 w-4 mr-2\" />\r\n                Cancel\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface AddSleepLogButtonProps {\r\n  onAdd?: () => void;\r\n}\r\n\r\nexport const AddSleepLogButton: React.FC<AddSleepLogButtonProps> = ({ onAdd }) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const handleSuccess = () => {\r\n    setShowForm(false);\r\n    onAdd?.();\r\n  };\r\n\r\n  if (showForm) {\r\n    return (\r\n      <SleepLogForm\r\n        onClose={() => setShowForm(false)}\r\n        onSuccess={handleSuccess}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Button \r\n      onClick={() => setShowForm(true)}\r\n      className=\"w-full\"\r\n    >\r\n      <Plus className=\"h-4 w-4 mr-2\" />\r\n      Log Sleep\r\n    </Button>\r\n  );\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\r\nimport { Moon, Clock, TrendingUp, Target, AlertCircle, CheckCircle } from 'lucide-react';\r\nimport { useSleepLogs } from '@/store/sleepLogStore';\r\nimport { generateSleepInsights, SleepInsight } from '@/utils/sleepCalculator';\r\n\r\ninterface SleepAnalyticsDashboardProps {\r\n  daysToShow?: number;\r\n}\r\n\r\nexport const SleepAnalyticsDashboard: React.FC<SleepAnalyticsDashboardProps> = ({ \r\n  daysToShow = 14 \r\n}) => {\r\n  const { sleepLogs, getSleepMetrics } = useSleepLogs();\r\n\r\n  // Calculate current sleep metrics\r\n  const currentMetrics = useMemo(() => {\r\n    return getSleepMetrics(7); // Last 7 days\r\n  }, [getSleepMetrics]);\r\n  // Get recent sleep data for charts\r\n  const recentSleepData = useMemo(() => {\r\n    const cutoffDate = new Date();\r\n    cutoffDate.setDate(cutoffDate.getDate() - daysToShow);\r\n    \r\n    return sleepLogs\r\n      .filter(log => new Date(log.date) >= cutoffDate)\r\n      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\r\n      .map(log => {\r\n        const bed = new Date(`1970-01-01T${log.bedTime}:00`);\r\n        const wake = new Date(`1970-01-01T${log.wakeTime}:00`);\r\n        \r\n        if (wake < bed) {\r\n          wake.setDate(wake.getDate() + 1);\r\n        }\r\n        \r\n        const timeInBed = (wake.getTime() - bed.getTime()) / (1000 * 60 * 60);\r\n        const efficiency = timeInBed > 0 ? (log.sleepDuration / timeInBed) * 100 : 0;\r\n        \r\n        return {\r\n          ...log,\r\n          displayDate: new Date(log.date).toLocaleDateString('en-US', { \r\n            month: 'short', \r\n            day: 'numeric' \r\n          }),\r\n          efficiency\r\n        };\r\n      });\r\n  }, [sleepLogs, daysToShow]);\r\n\r\n  // Generate sleep insights\r\n  const insights = useMemo(() => {\r\n    return generateSleepInsights(sleepLogs);\r\n  }, [sleepLogs]);\r\n  const getQualityColor = (quality: number) => {\r\n    if (quality >= 4) return 'text-green-500';\r\n    if (quality >= 3) return 'text-yellow-500';\r\n    return 'text-red-500';\r\n  };\r\n\r\n  if (!sleepLogs || sleepLogs.length === 0) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <Moon className=\"h-5 w-5 mr-2 text-blue-500\" />\r\n            Sleep Analytics\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Start logging your sleep to see analytics and insights\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"text-center py-8\">\r\n          <Moon className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\r\n          <p className=\"text-muted-foreground\">No sleep data available</p>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Sleep Metrics Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-xs text-muted-foreground\">Avg Duration</p>\r\n                <p className=\"text-lg font-semibold\">{currentMetrics.averageDuration.toFixed(1)}h</p>\r\n              </div>\r\n              <Clock className=\"h-4 w-4 text-blue-500\" />\r\n            </div>\r\n            <Progress \r\n              value={(currentMetrics.averageDuration / 9) * 100} \r\n              className=\"h-1 mt-2\" \r\n            />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-xs text-muted-foreground\">Avg Quality</p>\r\n                <p className={`text-lg font-semibold ${getQualityColor(currentMetrics.averageQuality)}`}>\r\n                  {currentMetrics.averageQuality.toFixed(1)}/5\r\n                </p>\r\n              </div>\r\n              <Target className=\"h-4 w-4 text-green-500\" />\r\n            </div>\r\n            <Progress \r\n              value={(currentMetrics.averageQuality / 5) * 100} \r\n              className=\"h-1 mt-2\" \r\n            />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-xs text-muted-foreground\">Sleep Efficiency</p>\r\n                <p className=\"text-lg font-semibold\">{currentMetrics.sleepEfficiency.toFixed(0)}%</p>\r\n              </div>\r\n              <TrendingUp className=\"h-4 w-4 text-purple-500\" />\r\n            </div>\r\n            <Progress \r\n              value={currentMetrics.sleepEfficiency} \r\n              className=\"h-1 mt-2\" \r\n            />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-xs text-muted-foreground\">Consistency</p>\r\n                <p className=\"text-lg font-semibold\">{currentMetrics.consistencyScore.toFixed(0)}%</p>\r\n              </div>\r\n              <CheckCircle className=\"h-4 w-4 text-orange-500\" />\r\n            </div>\r\n            <Progress \r\n              value={currentMetrics.consistencyScore} \r\n              className=\"h-1 mt-2\" \r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Sleep Analytics Tabs */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Sleep Analytics</CardTitle>\r\n          <CardDescription>\r\n            Track your sleep patterns and recovery over time\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Tabs defaultValue=\"trends\">\r\n            <TabsList className=\"grid w-full grid-cols-3\">\r\n              <TabsTrigger value=\"trends\">Sleep Trends</TabsTrigger>\r\n              <TabsTrigger value=\"quality\">Quality Analysis</TabsTrigger>\r\n              <TabsTrigger value=\"insights\">Insights</TabsTrigger>\r\n            </TabsList>\r\n            \r\n            <TabsContent value=\"trends\" className=\"space-y-4\">\r\n              <div className=\"h-64\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <LineChart data={recentSleepData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" opacity={0.2} />\r\n                    <XAxis \r\n                      dataKey=\"displayDate\" \r\n                      fontSize={12}\r\n                      tick={{ fontSize: 10 }}\r\n                    />\r\n                    <YAxis \r\n                      fontSize={12}\r\n                      tick={{ fontSize: 10 }}\r\n                    />\r\n                    <Tooltip \r\n                      contentStyle={{ \r\n                        backgroundColor: 'hsl(var(--background))',\r\n                        border: '1px solid hsl(var(--border))',\r\n                        borderRadius: '6px'\r\n                      }}\r\n                      formatter={(value: number, name: string) => [\r\n                        name === 'sleepDuration' ? `${value.toFixed(1)}h` : \r\n                        name === 'sleepQuality' ? `${value}/5` :\r\n                        `${value.toFixed(0)}%`,\r\n                        name === 'sleepDuration' ? 'Duration' :\r\n                        name === 'sleepQuality' ? 'Quality' : 'Efficiency'\r\n                      ]}\r\n                    />\r\n                    <Line \r\n                      type=\"monotone\" \r\n                      dataKey=\"sleepDuration\" \r\n                      stroke=\"#3b82f6\" \r\n                      strokeWidth={2}\r\n                      dot={{ r: 3 }}\r\n                      name=\"sleepDuration\"\r\n                    />\r\n                    <Line \r\n                      type=\"monotone\" \r\n                      dataKey=\"efficiency\" \r\n                      stroke=\"#8b5cf6\" \r\n                      strokeWidth={2}\r\n                      dot={{ r: 3 }}\r\n                      name=\"efficiency\"\r\n                    />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-3 h-3 bg-blue-500 rounded-full mr-2\"></div>\r\n                  <span>Sleep Duration</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-3 h-3 bg-purple-500 rounded-full mr-2\"></div>\r\n                  <span>Sleep Efficiency</span>\r\n                </div>\r\n              </div>\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"quality\" className=\"space-y-4\">\r\n              <div className=\"h-64\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <BarChart data={recentSleepData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" opacity={0.2} />\r\n                    <XAxis \r\n                      dataKey=\"displayDate\" \r\n                      fontSize={12}\r\n                      tick={{ fontSize: 10 }}\r\n                    />\r\n                    <YAxis \r\n                      domain={[0, 5]}\r\n                      fontSize={12}\r\n                      tick={{ fontSize: 10 }}\r\n                    />\r\n                    <Tooltip \r\n                      contentStyle={{ \r\n                        backgroundColor: 'hsl(var(--background))',\r\n                        border: '1px solid hsl(var(--border))',\r\n                        borderRadius: '6px'\r\n                      }}\r\n                      formatter={(value: number) => [`${value}/5`, 'Quality']}\r\n                    />\r\n                    <Bar \r\n                      dataKey=\"sleepQuality\" \r\n                      fill=\"#10b981\"\r\n                      radius={[2, 2, 0, 0]}\r\n                    />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                <div>\r\n                  <p className=\"text-muted-foreground\">Time to Fall Asleep</p>\r\n                  <p className=\"font-medium\">{currentMetrics.averageTimeToSleep} min</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-muted-foreground\">Average Wake-ups</p>\r\n                  <p className=\"font-medium\">{currentMetrics.averageWakeUps.toFixed(1)}</p>\r\n                </div>\r\n              </div>\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"insights\" className=\"space-y-4\">\r\n              <div className=\"space-y-3\">\r\n                {insights.map((insight, index) => (\r\n                  <div \r\n                    key={index}\r\n                    className={`p-3 rounded-lg border-l-4 ${\r\n                      insight.type === 'positive' ? 'bg-green-50 border-green-500 dark:bg-green-950' :\r\n                      insight.type === 'warning' ? 'bg-yellow-50 border-yellow-500 dark:bg-yellow-950' :\r\n                      'bg-blue-50 border-blue-500 dark:bg-blue-950'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-start\">\r\n                      {insight.type === 'positive' ? \r\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mt-0.5 mr-2 flex-shrink-0\" /> :\r\n                        insight.type === 'warning' ? \r\n                          <AlertCircle className=\"h-4 w-4 text-yellow-500 mt-0.5 mr-2 flex-shrink-0\" /> :\r\n                          <TrendingUp className=\"h-4 w-4 text-blue-500 mt-0.5 mr-2 flex-shrink-0\" />\r\n                      }\r\n                      <div>\r\n                        <p className=\"text-sm font-medium\">{insight.insight}</p>\r\n                        <p className=\"text-xs text-muted-foreground mt-1\">{insight.recommendation}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {insights.length === 0 && (\r\n                  <div className=\"text-center py-8\">\r\n                    <Moon className=\"h-8 w-8 mx-auto text-muted-foreground mb-2\" />\r\n                    <p className=\"text-muted-foreground\">Log more sleep data to get personalized insights</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </TabsContent>\r\n          </Tabs>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\r\nimport { ArrowLeft, Moon, Plus, Edit, Trash2, Search, Calendar } from 'lucide-react';\r\nimport { useConsolidatedApp } from '@/hooks/useConsolidatedApp';\r\nimport { useSleepLogs } from '@/store/sleepLogStore';\r\nimport { SleepLogForm } from '@/components/sleep/SleepLogForm';\r\nimport { SleepAnalyticsDashboard } from '@/components/sleep/SleepAnalyticsDashboard';\r\nimport { SleepLogEntry } from '@/types/Sleep_Log';\r\nimport { DashboardLayout } from '@/components/DashboardLayout';\r\nimport { PageHeader } from '@/components/ui/PageHeader';\r\n\r\nconst SleepTrackingContent: React.FC = () => {\r\n  const { appStore } = useConsolidatedApp();\r\n  const { setCurrentView } = appStore;\r\n  const { sleepLogs, fetchSleepLogs, removeSleepLog, isLoading, error } = useSleepLogs();\r\n  \r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingLog, setEditingLog] = useState<SleepLogEntry | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedDateRange, setSelectedDateRange] = useState('7'); // days\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n\r\n  useEffect(() => {\r\n    fetchSleepLogs();\r\n  }, [fetchSleepLogs]);\r\n\r\n  // Filter logs based on search and date range\r\n  const filteredLogs = sleepLogs.filter(log => {\r\n    const matchesSearch = searchTerm === '' || \r\n      log.date.includes(searchTerm) ||\r\n      (log.sleepNotes && log.sleepNotes.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    \r\n    const logDate = new Date(log.date);\r\n    const cutoffDate = new Date();\r\n    cutoffDate.setDate(cutoffDate.getDate() - parseInt(selectedDateRange));\r\n    \r\n    const withinDateRange = selectedDateRange === 'all' || logDate >= cutoffDate;\r\n    \r\n    return matchesSearch && withinDateRange;\r\n  }).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n\r\n  const handleEdit = (log: SleepLogEntry) => {\r\n    setEditingLog(log);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDelete = async (logId: string) => {\r\n    if (window.confirm('Are you sure you want to delete this sleep log?')) {\r\n      await removeSleepLog(logId);\r\n    }\r\n  };\r\n\r\n  const handleFormClose = () => {\r\n    setShowForm(false);\r\n    setEditingLog(null);\r\n  };\r\n\r\n  const handleFormSuccess = () => {\r\n    setShowForm(false);\r\n    setEditingLog(null);\r\n    fetchSleepLogs(true); // Refresh data\r\n  };\r\n\r\n  const getQualityBadge = (quality: number) => {\r\n    if (quality >= 4) return <Badge className=\"bg-green-500/10 text-green-500\">Excellent</Badge>;\r\n    if (quality >= 3) return <Badge className=\"bg-blue-500/10 text-blue-500\">Good</Badge>;\r\n    if (quality >= 2) return <Badge className=\"bg-yellow-500/10 text-yellow-500\">Fair</Badge>;\r\n    return <Badge className=\"bg-red-500/10 text-red-500\">Poor</Badge>;\r\n  };\r\n\r\n  const formatTime = (time: string) => {\r\n    return new Date(`1970-01-01T${time}:00`).toLocaleTimeString('en-US', {\r\n      hour: 'numeric',\r\n      minute: '2-digit',\r\n      hour12: true\r\n    });\r\n  };\r\n\r\n  if (showForm) {\r\n    return (\r\n      <div className=\"container max-w-4xl mx-auto py-4 px-2 sm:px-4\">\r\n        <SleepLogForm \r\n          editingLog={editingLog}\r\n          onClose={handleFormClose}\r\n          onSuccess={handleFormSuccess}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container max-w-6xl mx-auto py-2 sm:py-4 px-2 sm:px-4 min-h-[80vh]\">\r\n      <PageHeader\r\n        icon={Moon}\r\n        title=\"Sleep Tracking\"\r\n        date={selectedDate}\r\n        onDateChange={setSelectedDate}\r\n        action={\r\n          <Button onClick={() => setShowForm(true)} aria-label=\"Log Sleep\">\r\n            <Plus className=\"h-4 w-4\" /> Log Sleep\r\n          </Button>\r\n        }\r\n      />\r\n      {/* Error Display */}\r\n      {error && (\r\n        <Card className=\"mb-4 border-red-200 bg-red-50 dark:bg-red-950\">\r\n          <CardContent className=\"pt-4\">\r\n            <p className=\"text-red-600 dark:text-red-400\">{error}</p>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n      {/* Main Content Tabs */}\r\n      <Tabs defaultValue=\"analytics\" className=\"space-y-4\">\r\n        <TabsList className=\"grid w-full grid-cols-3\">\r\n          <TabsTrigger value=\"analytics\" className=\"text-xs sm:text-sm\">Analytics</TabsTrigger>\r\n          <TabsTrigger value=\"logs\" className=\"text-xs sm:text-sm\">Sleep Logs</TabsTrigger>\r\n          <TabsTrigger value=\"recovery\" className=\"text-xs sm:text-sm\">Recovery Impact</TabsTrigger>\r\n        </TabsList>\r\n        {/* Analytics Tab */}\r\n        <TabsContent value=\"analytics\">\r\n          <SleepAnalyticsDashboard />\r\n        </TabsContent>\r\n        {/* Sleep Logs Tab */}\r\n        <TabsContent value=\"logs\" className=\"space-y-4\">\r\n          {/* Sleep Logs List */}\r\n          {isLoading ? (\r\n            <Card>\r\n              <CardContent className=\"py-8 text-center\">\r\n                <p className=\"text-muted-foreground\">Loading sleep logs...</p>\r\n              </CardContent>\r\n            </Card>\r\n          ) : filteredLogs.length === 0 ? (\r\n            <Card>\r\n              <CardContent className=\"py-8 text-center\">\r\n                <Moon className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\r\n                <p className=\"text-muted-foreground mb-4\">\r\n                  {sleepLogs.length === 0 \r\n                    ? \"No sleep logs yet. Start tracking your sleep!\"\r\n                    : \"No sleep logs match your current filters.\"\r\n                  }\r\n                </p>\r\n                {sleepLogs.length === 0 && (\r\n                  <Button onClick={() => setShowForm(true)} className=\"focus-visible:ring-2 focus-visible:ring-primary\" aria-label=\"Log Your First Sleep\">\r\n                    <Plus className=\"h-4 w-4 mr-2\" />\r\n                    Log Your First Sleep\r\n                  </Button>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-3\">\r\n              {filteredLogs.map((log) => (\r\n                <Card key={log.id} className=\"hover:shadow-md transition-shadow\">\r\n                  <CardContent className=\"p-4\">\r\n                    <div className=\"flex flex-col gap-2\">\r\n                      <div className=\"flex items-center gap-3 mb-2\">\r\n                        <h3 className=\"font-medium text-sm sm:text-base\">\r\n                          {new Date(log.date).toLocaleDateString('en-US', {\r\n                            weekday: 'short',\r\n                            month: 'short',\r\n                            day: 'numeric',\r\n                            year: 'numeric'\r\n                          })}\r\n                        </h3>\r\n                        {getQualityBadge(log.sleepQuality)}\r\n                        {!log.isSynced && (\r\n                          <Badge variant=\"outline\" className=\"text-orange-500 text-xs sm:text-sm\">\r\n                            Pending Sync\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"grid grid-cols-2 gap-2 text-xs sm:text-sm\">\r\n                        <div>\r\n                          <p className=\"text-muted-foreground\">Bedtime</p>\r\n                          <p className=\"font-medium\">{formatTime(log.bedTime)}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-muted-foreground\">Wake Time</p>\r\n                          <p className=\"font-medium\">{formatTime(log.wakeTime)}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-muted-foreground\">Duration</p>\r\n                          <p className=\"font-medium\">{log.sleepDuration}h</p>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-muted-foreground\">Time to Sleep</p>\r\n                          <p className=\"font-medium\">{log.timeToFallAsleep}m</p>\r\n                        </div>\r\n                      </div>\r\n                      {log.sleepNotes && (\r\n                        <div className=\"mt-2\">\r\n                          <p className=\"text-xs sm:text-sm text-muted-foreground\">\r\n                            <strong>Notes:</strong> {log.sleepNotes}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"flex gap-2 mt-2\">\r\n                        <Button\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleEdit(log)}\r\n                          className=\"focus-visible:ring-2 focus-visible:ring-primary\"\r\n                          aria-label=\"Edit Sleep Log\"\r\n                        >\r\n                          <Edit className=\"h-4 w-4\" />\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleDelete(log.id)}\r\n                          className=\"focus-visible:ring-2 focus-visible:ring-primary\"\r\n                          aria-label=\"Delete Sleep Log\"\r\n                        >\r\n                          <Trash2 className=\"h-4 w-4\" />\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </TabsContent>\r\n        {/* Recovery Impact Tab */}\r\n        <TabsContent value=\"recovery\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Sleep & Recovery Integration</CardTitle>\r\n              <CardDescription>\r\n                How your sleep affects muscle recovery and training readiness\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8\">\r\n                <Moon className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\r\n                <p className=\"text-muted-foreground mb-4\">\r\n                  Sleep recovery integration with muscle fatigue analysis coming soon!\r\n                </p>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  This will show how your sleep quality affects your training recovery.\r\n                </p>              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SleepTrackingPage() {\r\n  return (\r\n    <DashboardLayout>\r\n      <SleepTrackingContent />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n"],"names":["_excluded","_excluded2","_typeof","o","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","sourceSymbolKeys","_extends","ownKeys","e","r","t","_objectSpread","_defineProperty","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","n","iter","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","self","call","_assertThisInitialized","_inherits","subClass","superClass","_setPrototypeOf","p","obj","value","_toPrimitive","Line","_PureComponent","_this","_len","args","_key","totalLength","length","lines","lineLength","pre","next","count","remainLength","restLength","remainLines","sum","emptyLines","line","uniqueId","node","curveDom","needClip","clipPathId","_this$props","points","xAxis","yAxis","layout","children","errorBarItems","findAllByType","ErrorBar","dataPointFormatter","dataPoint","dataKey","getValueByDataKey","errorBarProps","React","Layer","item","clipDot","isAnimationActive","_this$props2","dot","lineProps","filterProps","customDotProps","dots","entry","dotProps","dotsProps","_this$props3","type","connectNulls","others","curveProps","Curve","_this2","_this$props4","strokeDasharray","animationBegin","animationDuration","animationEasing","animationId","animateNewValues","width","height","_this$state","prevPoints","Animate","_ref","prevPointsDiffFactor","stepData","index","prevPointIndex","prev","interpolatorX","interpolateNumber","interpolatorY","_interpolatorX","_interpolatorY","interpolator","curLength","currentStrokeDasharray","num","_this$props5","_this$state2","isEqual","_filterProps","_this$props6","hide","className","top","left","id","isAnimationFinished","hasSinglePoint","layerClass","clsx","needClipX","needClipY","isNil","_ref2","_ref2$r","_ref2$strokeWidth","strokeWidth","_ref3","hasClipDot","_ref3$clipDot","dotSize","LabelList","nextProps","prevState","linesUnit","result","option","dotItem","isFunction","Dot","PureComponent","Global","_ref4","xAxisTicks","yAxisTicks","bandSize","displayedData","offset","getCateCoordinateOfLine","LineChart","generateCategoricalChart","XAxis","YAxis","formatAxisMap","calculateSleepMetrics","sleepLogs","daysToConsider","cutoffDate","recentLogs","log","totalDuration","totalQuality","totalTimeToSleep","totalWakeUps","averageDuration","averageQuality","averageTimeToSleep","averageWakeUps","totalEfficiency","timeInBed","calculateTimeInBed","efficiency","sleepEfficiency","consistencyScore","calculateSleepConsistency","generateSleepInsights","metrics","insights","bedTime","wakeTime","bedHour","bedMin","wakeHour","wakeMin","bedTimeMinutes","wakeTimeMinutes","logs","sleepTimes","timeToMinutes","wakeTimes","sleepVariance","calculateTimeVariance","wakeVariance","sleepConsistency","wakeConsistency","time","hour","min","times","mean","variance","diff","SLEEP_SHEET_NAME","useSleepLogs","create","persist","set","get","forceRefresh","response","readSpreadsheetData","row","uuidv4","error","newLogData","newLog","state","rowData","createSpreadsheetRow","updatedLog","updateSpreadsheetRow","logId","logToRemove","deleteSpreadsheetRow","pendingLogs","l","bedTimes","bedTimeVariance","avgBedTime","s","wakeTimeVariance","avgWakeTime","createJSONStorage","Textarea","jsx","cn","SleepLogForm","editingLog","onClose","onSuccess","addSleepLog","editSleepLog","formData","setFormData","useState","isSubmitting","setIsSubmitting","handleInputChange","field","calculateSleepDuration","bed","wake","diffMs","handleTimeChange","newFormData","handleSubmit","getQualityLabel","quality","jsxs","Card","CardHeader","CardTitle","Moon","CardContent","Label","Input","Slider","Button","Save","X","SleepAnalyticsDashboard","daysToShow","getSleepMetrics","currentMetrics","useMemo","recentSleepData","a","b","getQualityColor","CardDescription","Clock","Progress","Target","TrendingUp","CheckCircle","Tabs","TabsList","TabsTrigger","TabsContent","ResponsiveContainer","CartesianGrid","Tooltip","name","BarChart","Bar","insight","AlertCircle","SleepTrackingContent","appStore","useConsolidatedApp","setCurrentView","fetchSleepLogs","removeSleepLog","isLoading","showForm","setShowForm","setEditingLog","searchTerm","setSearchTerm","selectedDateRange","setSelectedDateRange","selectedDate","setSelectedDate","useEffect","filteredLogs","matchesSearch","logDate","withinDateRange","handleEdit","handleDelete","handleFormClose","handleFormSuccess","getQualityBadge","Badge","formatTime","PageHeader","Plus","Edit","Trash2","SleepTrackingPage","DashboardLayout"],"mappings":"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","x_google_ignoreList":[0,1]}