{"version":3,"file":"SettingsPage-BayghHFD.js","sources":["../../node_modules/lucide-react/dist/esm/icons/laptop.js","../../src/views/SettingsPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.509.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M18 5a2 2 0 0 1 2 2v8.526a2 2 0 0 0 .212.897l1.068 2.127a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45l1.068-2.127A2 2 0 0 0 4 15.526V7a2 2 0 0 1 2-2z\",\n      key: \"1pdavp\"\n    }\n  ],\n  [\"path\", { d: \"M20.054 15.987H3.946\", key: \"14rxg9\" }]\n];\nconst Laptop = createLucideIcon(\"laptop\", __iconNode);\n\nexport { __iconNode, Laptop as default };\n//# sourceMappingURL=laptop.js.map\n","import React from 'react';\r\nimport { useTheme } from '@/contexts/ThemeContext';\r\nimport { useFatigueSettings } from '@/contexts/FatigueSettingsContext';\r\nimport { useAppStore } from '@/store/appStore';\r\nimport { DashboardLayout } from '@/components/DashboardLayout';\r\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Moon, Sun, Laptop, Check, RotateCcw, Save } from 'lucide-react';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { cn } from '@/lib/utils';\r\nimport type { Theme } from '@/types/theme';\r\nimport type { MetricSystem } from '@/store/appStore';\r\n\r\nconst themeOptions = [\r\n  { value: 'light', icon: Sun, label: 'Light' },\r\n  { value: 'dark', icon: Moon, label: 'Dark' },\r\n  { value: 'system', icon: Laptop, label: 'System' },\r\n];\r\n\r\nconst unitOptions = [\r\n  { value: 'metric', label: 'Metric', desc: '(kg, cm, °C)' },\r\n  { value: 'imperial', label: 'Imperial', desc: '(lbs, in, °F)' },\r\n  { value: 'indian', label: 'Indian', desc: '(kg, ft, °C)' },\r\n];\r\n\r\nconst SECTIONS = [\r\n  { key: 'theme', label: 'Theme', icon: Sun },\r\n  { key: 'units', label: 'Units', icon: Laptop },\r\n  { key: 'fatigue', label: 'Fatigue', icon: RotateCcw },\r\n  { key: 'cache', label: 'Cache', icon: Save },\r\n];\r\n\r\ntype SectionKey = 'theme' | 'units' | 'fatigue' | 'cache';\r\n\r\nconst SettingsPage = React.memo(() => {\r\n  const { theme, setTheme } = useTheme();\r\n  const { settings, updateSettings, resetToDefaults } = useFatigueSettings();\r\n  const [cacheDuration, setCacheDuration] = React.useState('7');\r\n  const { metricSettings, setMetricSystem, setWeightUnit, setHeightUnit, setTemperatureUnit } = useAppStore();\r\n  const [selectedSection, setSelectedSection] = React.useState<SectionKey>('theme');\r\n\r\n  // Sidebar for desktop, tab bar/select for mobile\r\n  const renderNav = () => (\r\n    <>\r\n      {/* Desktop sidebar */}\r\n      <nav className=\"hidden sm:flex flex-col gap-2 min-w-[140px] pr-4 pt-2\" aria-label=\"Settings sections\">\r\n        {SECTIONS.map(({ key, label, icon: Icon }) => (\r\n          <button\r\n            key={key}\r\n            className={cn(\r\n              'flex items-center gap-2 px-3 py-2 rounded-lg text-left font-medium transition-all',\r\n              selectedSection === key\r\n                ? 'bg-primary/10 text-primary shadow-sm' : 'hover:bg-muted/60 text-muted-foreground',\r\n              'focus-visible:outline focus-visible:outline-2 focus-visible:outline-primary'\r\n            )}\r\n            aria-selected={selectedSection === key}\r\n            tabIndex={0}\r\n            onClick={() => setSelectedSection(key as SectionKey)}\r\n          >\r\n            <Icon className=\"h-5 w-5\" />\r\n            <span>{label}</span>\r\n          </button>\r\n        ))}\r\n      </nav>\r\n      {/* Mobile tab bar */}\r\n      <nav className=\"flex sm:hidden gap-1 w-full mb-4\" aria-label=\"Settings sections\">\r\n        {SECTIONS.map(({ key, label, icon: Icon }) => (\r\n          <button\r\n            key={key}\r\n            className={cn(\r\n              'flex-1 flex flex-col items-center justify-center px-2 py-2 rounded-lg text-xs font-medium transition-all',\r\n              selectedSection === key\r\n                ? 'bg-primary/10 text-primary shadow-sm' : 'hover:bg-muted/60 text-muted-foreground',\r\n              'focus-visible:outline focus-visible:outline-2 focus-visible:outline-primary'\r\n            )}\r\n            aria-selected={selectedSection === key}\r\n            tabIndex={0}\r\n            onClick={() => setSelectedSection(key as SectionKey)}\r\n          >\r\n            <Icon className=\"h-5 w-5 mb-0.5\" />\r\n            {label}\r\n          </button>\r\n        ))}\r\n      </nav>\r\n    </>\r\n  );\r\n\r\n  // Section content\r\n  const renderSection = () => {\r\n    switch (selectedSection) {\r\n      case 'theme':\r\n        return (\r\n          <Card className=\"glass-card animate-in\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-xl font-semibold\">Theme</CardTitle>\r\n              <p className=\"text-muted-foreground text-sm\">Choose your preferred appearance mode</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex justify-between gap-3\">\r\n                {themeOptions.map(opt => {\r\n                  const Icon = opt.icon;\r\n                  const active = theme === opt.value;\r\n                  return (\r\n                    <button\r\n                      key={opt.value}\r\n                      onClick={() => setTheme(opt.value as Theme)}\r\n                      className={cn(\r\n                        'relative flex flex-col items-center justify-center w-full rounded-xl p-3 h-20 border transition-all',\r\n                        active ? 'border-primary bg-primary/10 shadow-md' : 'border-border bg-card/80',\r\n                        'hover:bg-primary/5 focus-visible:ring-2 focus-visible:ring-primary'\r\n                      )}\r\n                      aria-label={opt.label}\r\n                    >\r\n                      <Icon className=\"h-7 w-7 mb-1\" />\r\n                      <span className=\"text-xs font-medium\">{opt.label}</span>\r\n                      {active && (\r\n                        <span className=\"absolute top-2 right-2 text-primary\">\r\n                          <Check className=\"h-4 w-4\" />\r\n                        </span>\r\n                      )}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      case 'units':\r\n        return (\r\n          <Card className=\"glass-card animate-in\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-xl font-semibold\">Measurement Units</CardTitle>\r\n              <p className=\"text-muted-foreground text-sm\">Select your preferred measurement system</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex flex-col gap-4\">\r\n                <div className=\"flex justify-between gap-2\">\r\n                  {unitOptions.map(opt => (\r\n                    <button\r\n                      key={opt.value}\r\n                      onClick={() => setMetricSystem(opt.value as MetricSystem)}\r\n                      className={cn(\r\n                        'flex-1 rounded-full px-4 py-2 border text-sm font-medium transition-all',\r\n                        metricSettings.system === opt.value ? 'border-primary bg-primary/10 text-primary' : 'border-border bg-card/80',\r\n                        'hover:bg-primary/5 focus-visible:ring-2 focus-visible:ring-primary'\r\n                      )}\r\n                    >\r\n                      {opt.label} <span className=\"ml-1 text-xs text-muted-foreground\">{opt.desc}</span>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-3\">\r\n                  <div>\r\n                    <Label className=\"text-xs font-medium mb-1\">Weight Unit</Label>\r\n                    <Select value={metricSettings.weightUnit} onValueChange={v => setWeightUnit(v as 'kg' | 'lbs')}>\r\n                      <SelectTrigger className=\"w-full\">\r\n                        <SelectValue placeholder=\"Select unit\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"kg\">Kilograms (kg)</SelectItem>\r\n                        <SelectItem value=\"lbs\">Pounds (lbs)</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div>\r\n                    <Label className=\"text-xs font-medium mb-1\">Height Unit</Label>\r\n                    <Select value={metricSettings.heightUnit} onValueChange={v => setHeightUnit(v as 'cm' | 'inch')}>\r\n                      <SelectTrigger className=\"w-full\">\r\n                        <SelectValue placeholder=\"Select unit\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"cm\">Centimeters (cm)</SelectItem>\r\n                        <SelectItem value=\"inch\">Inches (in)</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div>\r\n                    <Label className=\"text-xs font-medium mb-1\">Temperature Unit</Label>\r\n                    <Select value={metricSettings.temperatureUnit} onValueChange={v => setTemperatureUnit(v as 'celsius' | 'fahrenheit')}>\r\n                      <SelectTrigger className=\"w-full\">\r\n                        <SelectValue placeholder=\"Select unit\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"celsius\">Celsius (°C)</SelectItem>\r\n                        <SelectItem value=\"fahrenheit\">Fahrenheit (°F)</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      case 'fatigue':\r\n        return (\r\n          <Card className=\"glass-card animate-in\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-xl font-semibold\">Muscle Fatigue</CardTitle>\r\n              <p className=\"text-muted-foreground text-sm\">Customize fatigue and recovery parameters</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"daysToConsider\" className=\"text-xs font-medium\">Days to Consider</Label>\r\n                  <Input\r\n                    id=\"daysToConsider\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"30\"\r\n                    value={settings.daysToConsider}\r\n                    onChange={e => updateSettings({ daysToConsider: parseInt(e.target.value) || 7 })}\r\n                    className=\"w-full\"\r\n                  />\r\n                  <p className=\"text-xs text-muted-foreground mt-1\">Recent days to analyze for fatigue</p>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"recoveryRate\" className=\"text-xs font-medium\">Recovery Rate (%/day)</Label>\r\n                  <Input\r\n                    id=\"recoveryRate\"\r\n                    type=\"number\"\r\n                    min=\"5\"\r\n                    max=\"50\"\r\n                    step=\"0.5\"\r\n                    value={settings.recoveryRate}\r\n                    onChange={e => updateSettings({ recoveryRate: parseFloat(e.target.value) || 15 })}\r\n                    className=\"w-full\"\r\n                  />\r\n                  <p className=\"text-xs text-muted-foreground mt-1\">How much fatigue reduces per day of rest</p>\r\n                </div>\r\n              </div>\r\n              <Separator className=\"my-4\" />\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"thresholdLow\" className=\"text-xs font-medium text-green-600 dark:text-green-400\">Ready to Train</Label>\r\n                  <Input\r\n                    id=\"thresholdLow\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    value={settings.thresholds.low}\r\n                    onChange={e => updateSettings({ thresholds: { ...settings.thresholds, low: parseInt(e.target.value) || 20 } })}\r\n                    className=\"w-full\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"thresholdMedium\" className=\"text-xs font-medium text-yellow-600 dark:text-yellow-400\">Recovering</Label>\r\n                  <Input\r\n                    id=\"thresholdMedium\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    value={settings.thresholds.medium}\r\n                    onChange={e => updateSettings({ thresholds: { ...settings.thresholds, medium: parseInt(e.target.value) || 60 } })}\r\n                    className=\"w-full\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"thresholdHigh\" className=\"text-xs font-medium text-red-600 dark:text-red-400\">Needs Rest</Label>\r\n                  <Input\r\n                    id=\"thresholdHigh\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    value={settings.thresholds.high}\r\n                    onChange={e => updateSettings({ thresholds: { ...settings.thresholds, high: parseInt(e.target.value) || 80 } })}\r\n                    className=\"w-full\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Separator className=\"my-4\" />\r\n              <div>\r\n                <Label htmlFor=\"maxFatigue\" className=\"text-xs font-medium\">Maximum Fatigue</Label>\r\n                <Input\r\n                  id=\"maxFatigue\"\r\n                  type=\"number\"\r\n                  min=\"50\"\r\n                  max=\"200\"\r\n                  value={settings.maxFatigue}\r\n                  onChange={e => updateSettings({ maxFatigue: parseInt(e.target.value) || 100 })}\r\n                  className=\"w-full\"\r\n                />\r\n                <p className=\"text-xs text-muted-foreground mt-1\">Maximum fatigue level that can be accumulated</p>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <div className=\"flex flex-col sm:flex-row gap-2 w-full justify-center items-center\">\r\n                <Button \r\n                  variant=\"outline\"\r\n                  onClick={resetToDefaults}\r\n                  className=\"w-full sm:w-auto flex items-center gap-2\"\r\n                >\r\n                  <RotateCcw className=\"h-4 w-4\" />\r\n                  Reset to Defaults\r\n                </Button>\r\n                <Button \r\n                  variant=\"default\"\r\n                  className=\"w-full sm:w-auto bg-primary text-primary-foreground\"\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Save Settings\r\n                </Button>\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        );\r\n      case 'cache':\r\n        return (\r\n          <Card className=\"glass-card animate-in\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-xl font-semibold\">Cache</CardTitle>\r\n              <p className=\"text-muted-foreground text-sm\">Configure how long data is stored locally</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div>\r\n                <Label htmlFor=\"cacheDuration\" className=\"text-xs font-medium\">Cache Duration (days)</Label>\r\n                <Select value={cacheDuration} onValueChange={setCacheDuration}>\r\n                  <SelectTrigger className=\"w-full max-w-xs\">\r\n                    <SelectValue placeholder=\"Select duration\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"1\">1 day</SelectItem>\r\n                    <SelectItem value=\"3\">3 days</SelectItem>\r\n                    <SelectItem value=\"7\">7 days</SelectItem>\r\n                    <SelectItem value=\"14\">14 days</SelectItem>\r\n                    <SelectItem value=\"30\">30 days</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n                <p className=\"text-xs text-muted-foreground mt-1\">Data older than this will be refreshed from the server</p>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button variant=\"default\" className=\"w-full sm:w-auto bg-primary text-primary-foreground\">\r\n                <Save className=\"h-4 w-4 mr-2\" />\r\n                Save Cache Settings\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <div className=\"max-w-4xl mx-auto p-2 sm:p-4 md:p-8 flex flex-col gap-6 animate-in\">\r\n        <header className=\"mb-2\">\r\n          <h1 className=\"text-3xl sm:text-4xl font-bold tracking-tight bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent drop-shadow-md mb-1\">Settings</h1>\r\n          <p className=\"text-muted-foreground text-base sm:text-lg\">Personalize your experience and preferences</p>\r\n        </header>\r\n        <div className=\"flex flex-col sm:flex-row gap-4\">\r\n          {renderNav()}\r\n          <div className=\"flex-1 min-w-0\">{renderSection()}</div>\r\n        </div>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n});\r\n\r\nSettingsPage.displayName = 'SettingsPage';\r\n\r\nexport default SettingsPage;"],"names":["__iconNode","Laptop","createLucideIcon","themeOptions","Sun","Moon","unitOptions","SECTIONS","RotateCcw","Save","SettingsPage","React","theme","setTheme","useTheme","settings","updateSettings","resetToDefaults","useFatigueSettings","cacheDuration","setCacheDuration","metricSettings","setMetricSystem","setWeightUnit","setHeightUnit","setTemperatureUnit","useAppStore","selectedSection","setSelectedSection","renderNav","jsxs","Fragment","jsx","key","label","Icon","cn","renderSection","Card","CardHeader","CardTitle","CardContent","opt","active","Check","Label","Select","v","SelectTrigger","SelectValue","SelectContent","SelectItem","Input","e","Separator","CardFooter","Button","DashboardLayout"],"mappings":"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","x_google_ignoreList":[0]}