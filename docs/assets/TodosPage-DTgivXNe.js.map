{"version":3,"file":"TodosPage-DTgivXNe.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-check.js","../../node_modules/lucide-react/dist/esm/icons/eye-off.js","../../node_modules/lucide-react/dist/esm/icons/eye.js","../../node_modules/lucide-react/dist/esm/icons/pen.js","../../src/utils/todoHelpers.ts","../../src/services/DataService.ts","../../src/components/ui/QuickAddTask.tsx","../../node_modules/@radix-ui/react-checkbox/dist/index.mjs","../../src/components/ui/checkbox.tsx","../../src/components/ui/InlineEditableTask.tsx","../../src/views/TodosPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.509.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m9 12 2 2 4-4\", key: \"dzmm74\" }]\n];\nconst CircleCheck = createLucideIcon(\"circle-check\", __iconNode);\n\nexport { __iconNode, CircleCheck as default };\n//# sourceMappingURL=circle-check.js.map\n","/**\n * @license lucide-react v0.509.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49\",\n      key: \"ct8e1f\"\n    }\n  ],\n  [\"path\", { d: \"M14.084 14.158a3 3 0 0 1-4.242-4.242\", key: \"151rxh\" }],\n  [\n    \"path\",\n    {\n      d: \"M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143\",\n      key: \"13bj9a\"\n    }\n  ],\n  [\"path\", { d: \"m2 2 20 20\", key: \"1ooewy\" }]\n];\nconst EyeOff = createLucideIcon(\"eye-off\", __iconNode);\n\nexport { __iconNode, EyeOff as default };\n//# sourceMappingURL=eye-off.js.map\n","/**\n * @license lucide-react v0.509.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0\",\n      key: \"1nclc0\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n];\nconst Eye = createLucideIcon(\"eye\", __iconNode);\n\nexport { __iconNode, Eye as default };\n//# sourceMappingURL=eye.js.map\n","/**\n * @license lucide-react v0.509.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z\",\n      key: \"1a8usu\"\n    }\n  ]\n];\nconst Pen = createLucideIcon(\"pen\", __iconNode);\n\nexport { __iconNode, Pen as default };\n//# sourceMappingURL=pen.js.map\n","import { TodoEntry } from \"@/types/DataModels\";\r\n\r\n/**\r\n * Todo Helper Functions\r\n * Ensures consistent field arrangement across all todo operations\r\n * Uses application field names (lowercase) internally, converts to spreadsheet format when needed\r\n */\r\n\r\n// Standard field order based on TodoEntry interface (lowercase for application use)\r\nexport interface TodoCreateData {\r\n  // BaseEntity fields (auto-generated)\r\n  // id: string;\r\n  // createdAt: string;\r\n  // updatedAt: string;\r\n  // isDeleted?: boolean;\r\n\r\n  // TodoEntry specific fields (in application format - lowercase)\r\n  personId?: string;\r\n  title: string;\r\n  description?: string;\r\n  dueDate?: string;\r\n  priority: \"low\" | \"medium\" | \"high\";\r\n  category: string;\r\n  status: \"active\" | \"completed\";\r\n  isCompleted: boolean;\r\n  completedAt?: string;\r\n  reminder?: boolean;\r\n  reminderTime?: string;\r\n  subtasks?: Array<{\r\n    id: string;\r\n    title: string;\r\n    isCompleted: boolean;\r\n    completedAt?: string;\r\n  }>;\r\n  notes?: string;\r\n  tags?: string[];\r\n}\r\n\r\nexport interface TodoUpdateData {\r\n  personId?: string;\r\n  title?: string;\r\n  description?: string;\r\n  dueDate?: string;\r\n  priority?: \"low\" | \"medium\" | \"high\";\r\n  category?: string;\r\n  status?: \"active\" | \"completed\";\r\n  isCompleted?: boolean;\r\n  completedAt?: string;\r\n  reminder?: boolean;\r\n  reminderTime?: string;\r\n  subtasks?: Array<{\r\n    id: string;\r\n    title: string;\r\n    isCompleted: boolean;\r\n    completedAt?: string;\r\n  }>;\r\n  notes?: string;\r\n  tags?: string[];\r\n}\r\n\r\n/**\r\n * Creates a new todo with consistent field arrangement (application format)\r\n */\r\nexport function createTodoData(params: {\r\n  title: string;\r\n  priority?: \"low\" | \"medium\" | \"high\";\r\n  category?: string;\r\n  description?: string;\r\n  dueDate?: string;\r\n  notes?: string;\r\n  tags?: string[];\r\n  personId?: string;\r\n}): TodoCreateData {\r\n  return {\r\n    // Keep fields in application format (lowercase)\r\n    personId: params.personId,\r\n    title: params.title.trim(),\r\n    description: params.description || \"\",\r\n    dueDate: params.dueDate,\r\n    priority: params.priority || \"medium\",\r\n    category: params.category || \"General\",\r\n    status: \"active\",\r\n    isCompleted: false,\r\n    completedAt: undefined,\r\n    reminder: false,\r\n    reminderTime: undefined,\r\n    subtasks: undefined,\r\n    notes: params.notes || \"\",\r\n    tags: params.tags || [],\r\n  };\r\n}\r\n\r\n/**\r\n * Updates a todo with consistent field arrangement (application format)\r\n */\r\nexport function updateTodoData(\r\n  existingTodo: TodoEntry,\r\n  updates: Partial<{\r\n    title: string;\r\n    description: string;\r\n    dueDate: string;\r\n    priority: \"low\" | \"medium\" | \"high\";\r\n    category: string;\r\n    status: \"active\" | \"completed\";\r\n    isCompleted: boolean;\r\n    completedAt: string;\r\n    reminder: boolean;\r\n    reminderTime: string;\r\n    notes: string;\r\n    tags: string[];\r\n  }>,\r\n): TodoUpdateData {\r\n  return {\r\n    // Keep fields in application format (lowercase)\r\n    personId: existingTodo.personId,\r\n    title: updates.title?.trim() || existingTodo.title,\r\n    description:\r\n      updates.description !== undefined\r\n        ? updates.description\r\n        : existingTodo.description,\r\n    dueDate:\r\n      updates.dueDate !== undefined ? updates.dueDate : existingTodo.dueDate,\r\n    priority: updates.priority || existingTodo.priority,\r\n    category: updates.category || existingTodo.category,\r\n    status: updates.status || existingTodo.status,\r\n    isCompleted:\r\n      updates.isCompleted !== undefined\r\n        ? updates.isCompleted\r\n        : existingTodo.isCompleted,\r\n    completedAt:\r\n      updates.completedAt !== undefined\r\n        ? updates.completedAt\r\n        : existingTodo.completedAt,\r\n    reminder:\r\n      updates.reminder !== undefined ? updates.reminder : existingTodo.reminder,\r\n    reminderTime:\r\n      updates.reminderTime !== undefined\r\n        ? updates.reminderTime\r\n        : existingTodo.reminderTime,\r\n    subtasks: existingTodo.subtasks,\r\n    notes: updates.notes !== undefined ? updates.notes : existingTodo.notes,\r\n    tags: updates.tags || existingTodo.tags,\r\n  };\r\n}\r\n\r\n/**\r\n * Mark todo as completed with consistent field arrangement (application format)\r\n */\r\nexport function markTodoComplete(): TodoUpdateData {\r\n  return {\r\n    status: \"completed\",\r\n    isCompleted: true,\r\n    completedAt: new Date().toISOString(),\r\n  };\r\n}\r\n\r\n/**\r\n * Mark todo as incomplete with consistent field arrangement (application format)\r\n */\r\nexport function markTodoIncomplete(): TodoUpdateData {\r\n  return {\r\n    status: \"active\",\r\n    isCompleted: false,\r\n    completedAt: undefined,\r\n  };\r\n}\r\n\r\n/**\r\n * Converts application format (lowercase) to spreadsheet format (capitalized)\r\n * Used when sending data to spreadsheet API\r\n */\r\nexport function convertToSpreadsheetFormat(\r\n  data: TodoCreateData | TodoUpdateData,\r\n): Record<string, any> {\r\n  const result: Record<string, any> = {};\r\n\r\n  // Convert each field from lowercase to capitalized\r\n  if (data.personId !== undefined) result.PersonID = data.personId;\r\n  if (data.title !== undefined) result.Title = data.title;\r\n  if (data.description !== undefined) result.Description = data.description;\r\n  if (data.dueDate !== undefined) result.DueDate = data.dueDate;\r\n  if (data.priority !== undefined) result.Priority = data.priority;\r\n  if (data.category !== undefined) result.Category = data.category;\r\n  if (data.status !== undefined) result.Status = data.status;\r\n  if (data.isCompleted !== undefined) result.IsCompleted = data.isCompleted;\r\n  if (data.completedAt !== undefined) result.CompletedAt = data.completedAt;\r\n  if (data.reminder !== undefined) result.Reminder = data.reminder;\r\n  if (data.reminderTime !== undefined) result.ReminderTime = data.reminderTime;\r\n  if (data.subtasks !== undefined) result.Subtasks = data.subtasks;\r\n  if (data.notes !== undefined) result.Notes = data.notes;\r\n  if (data.tags !== undefined) result.Tags = data.tags;\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Converts spreadsheet raw data to proper TodoEntry format\r\n * Handles boolean conversion and field mapping\r\n */\r\nexport function convertFromSpreadsheetFormat(\r\n  rawData: Record<string, any>,\r\n): Partial<TodoEntry> {\r\n  // Helper function to convert spreadsheet boolean strings to actual booleans\r\n  const parseBoolean = (value: any): boolean => {\r\n    if (typeof value === \"boolean\") return value;\r\n    if (typeof value === \"string\") {\r\n      const normalized = value.toLowerCase().trim();\r\n      return normalized === \"true\" || normalized === \"1\";\r\n    }\r\n    return Boolean(value);\r\n  };\r\n\r\n  // Helper function to parse JSON strings safely\r\n  const parseJSON = (value: any): any => {\r\n    if (typeof value === \"string\" && value.trim()) {\r\n      try {\r\n        return JSON.parse(value);\r\n      } catch {\r\n        return value;\r\n      }\r\n    }\r\n    return value;\r\n  };\r\n\r\n  return {\r\n    // Handle both capitalized and lowercase field names from spreadsheet\r\n    id: rawData.ID || rawData.id,\r\n    personId: rawData.PersonID || rawData.personId,\r\n    title: rawData.Title || rawData.title,\r\n    description: rawData.Description || rawData.description,\r\n    dueDate: rawData.DueDate || rawData.dueDate,\r\n    priority: rawData.Priority || rawData.priority || \"medium\",\r\n    category: rawData.Category || rawData.category || \"General\",\r\n    status: rawData.Status || rawData.status || \"active\",\r\n    isCompleted: parseBoolean(rawData.IsCompleted || rawData.isCompleted),\r\n    completedAt: rawData.CompletedAt || rawData.completedAt,\r\n    reminder: parseBoolean(rawData.Reminder || rawData.reminder),\r\n    reminderTime: rawData.ReminderTime || rawData.reminderTime,\r\n    subtasks: parseJSON(rawData.Subtasks || rawData.subtasks),\r\n    notes: rawData.Notes || rawData.notes,\r\n    tags: parseJSON(rawData.Tags || rawData.tags) || [],\r\n    createdAt: rawData.CreatedAt || rawData.createdAt,\r\n    updatedAt: rawData.UpdatedAt || rawData.updatedAt,\r\n  };\r\n}\r\n\r\n/**\r\n * Formats todo data for display with consistent field access\r\n */\r\nexport function formatTodoForDisplay(todo: TodoEntry) {\r\n  return {\r\n    id: todo.id,\r\n    title: todo.title,\r\n    description: todo.description || \"\",\r\n    dueDate: todo.dueDate,\r\n    priority: todo.priority,\r\n    category: todo.category,\r\n    status: todo.status,\r\n    isCompleted: todo.isCompleted,\r\n    completedAt: todo.completedAt,\r\n    createdAt: todo.createdAt,\r\n    updatedAt: todo.updatedAt,\r\n    notes: todo.notes || \"\",\r\n    tags: todo.tags || [],\r\n    reminder: todo.reminder || false,\r\n    reminderTime: todo.reminderTime,\r\n  };\r\n}\r\n","// Unified Data Service - Centralized data operations\n// This service provides a clean interface that can be easily migrated from spreadsheet to database\n\nimport {\n  createSpreadsheetRow,\n  readSpreadsheetData,\n  updateSpreadsheetRow,\n  deleteSpreadsheetRow,\n  KnownSheetName,\n} from \"@/lib/spreadsheetAPI\";\nimport {\n  WorkoutLogEntry,\n  Exercise,\n  WorkoutTemplate,\n  WorkoutSession,\n  VitalSigns,\n  BodyMeasurement,\n  NutritionEntry,\n  MeditationEntry,\n  HealthEntry,\n  SleepEntry,\n  TodoEntry,\n  TodoCategory,\n  ApiResult,\n  FilterOptions,\n  PaginationOptions,\n  DataResponse,\n  EntityKey,\n  EntityType,\n} from \"@/types/DataModels\";\nimport {\n  markTodoComplete,\n  markTodoIncomplete,\n  convertToSpreadsheetFormat,\n  convertFromSpreadsheetFormat,\n} from \"@/utils/todoHelpers\";\n\n// Sheet mapping for different entity types\nconst SHEET_MAPPING: Record<EntityKey, KnownSheetName> = {\n  workoutLogs: \"Workout_Logs\",\n  exercises: \"Exercises\",\n  workoutTemplates: \"WorkoutTemplates\",\n  workoutSessions: \"Workout_Sessions\",\n  vitalSigns: \"Vital_Signs\",\n  bodyMeasurements: \"Body_Measurements\",\n  nutritionEntries: \"Nutrition_Log\",\n  meditationEntries: \"Meditation_Log\",\n  healthEntries: \"Health_Tracking\",\n  sleepEntries: \"Sleep_Log\",\n  todoEntries: \"ToDo\",\n  todoCategories: \"ToDo\",\n};\n\n// Generic data transformation functions\nfunction generateId(): string {\n  return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction addTimestamps<T extends Record<string, unknown>>(\n  data: T,\n): T & { createdAt: string; updatedAt: string; id: string } {\n  const now = new Date().toISOString();\n  return {\n    ...data,\n    id: (data.id as string) || generateId(),\n    createdAt: (data.createdAt as string) || now,\n    updatedAt: now,\n  };\n}\n\n// Base Data Service Class\nclass BaseDataService<T extends Record<string, unknown>> {\n  constructor(private entityKey: EntityKey) {}\n\n  private get sheetName(): KnownSheetName {\n    return SHEET_MAPPING[this.entityKey];\n  }\n\n  async getAll(\n    filters?: FilterOptions,\n    pagination?: PaginationOptions,\n  ): Promise<ApiResult<DataResponse<T>>> {\n    try {\n      const result = await readSpreadsheetData<T>(this.sheetName);\n\n      if (!result.success) {\n        return { success: false, error: result.error || \"Failed to read data\" };\n      }\n\n      let data = result.data || [];\n\n      // Convert todo data from spreadsheet format if this is a todo entity\n      if (this.entityKey === \"todoEntries\") {\n        data = data.map((item) =>\n          convertFromSpreadsheetFormat(item as any),\n        ) as T[];\n      }\n\n      // Apply filters\n      if (filters) {\n        data = this.applyFilters(data, filters);\n      }\n\n      // Apply pagination\n      if (pagination) {\n        const paginatedResult = this.applyPagination(data, pagination);\n        return {\n          success: true,\n          data: paginatedResult,\n        };\n      }\n\n      return {\n        success: true,\n        data: {\n          data,\n          total: data.length,\n          page: 1,\n          limit: data.length,\n          hasMore: false,\n        },\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  async getById(id: string): Promise<ApiResult<T>> {\n    try {\n      const result = await this.getAll();\n      if (!result.success || !result.data) {\n        return { success: false, error: result.error || \"Failed to get data\" };\n      }\n\n      const item = result.data.data.find(\n        (item: T) => (item as T & { id: string }).id === id,\n      );\n      if (!item) {\n        return { success: false, error: \"Item not found\" };\n      }\n\n      return { success: true, data: item };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  async create(\n    data: Omit<T, \"id\" | \"createdAt\" | \"updatedAt\">,\n  ): Promise<ApiResult<T>> {\n    try {\n      const entityData = addTimestamps(data as T);\n\n      // Convert to spreadsheet format if this is a todo entity\n      const spreadsheetData =\n        this.entityKey === \"todoEntries\"\n          ? convertToSpreadsheetFormat(entityData as any)\n          : entityData;\n\n      const result = await createSpreadsheetRow(\n        this.sheetName,\n        spreadsheetData,\n      );\n\n      if (!result.success) {\n        return { success: false, error: result.error };\n      }\n\n      return { success: true, data: entityData };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  async update(id: string, data: Partial<T>): Promise<ApiResult<T>> {\n    try {\n      // First find the row index\n      const allData = await this.getAll();\n      if (!allData.success || !allData.data) {\n        return { success: false, error: allData.error || \"Failed to get data\" };\n      }\n\n      const itemIndex = allData.data.data.findIndex(\n        (item: T) => (item as T & { id: string }).id === id,\n      );\n      if (itemIndex === -1) {\n        return { success: false, error: \"Item not found\" };\n      }\n\n      const updateData = {\n        ...data,\n        updatedAt: new Date().toISOString(),\n      };\n\n      // Convert to spreadsheet format if this is a todo entity\n      const spreadsheetData =\n        this.entityKey === \"todoEntries\"\n          ? convertToSpreadsheetFormat(updateData as any)\n          : updateData;\n\n      const result = await updateSpreadsheetRow(\n        this.sheetName,\n        itemIndex + 2,\n        spreadsheetData,\n      ); // +2 for header row and 1-based indexing\n\n      if (!result.success) {\n        return {\n          success: false,\n          error: result.error || \"Failed to update data\",\n        };\n      }\n\n      // Return updated data\n      const updatedItem = {\n        ...allData.data.data[itemIndex],\n        ...updateData,\n      } as T;\n      return { success: true, data: updatedItem };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  async delete(id: string): Promise<ApiResult<void>> {\n    try {\n      // First find the row index\n      const allData = await this.getAll();\n      if (!allData.success || !allData.data) {\n        return { success: false, error: allData.error || \"Failed to get data\" };\n      }\n\n      const itemIndex = allData.data.data.findIndex(\n        (item: T) => (item as T & { id: string }).id === id,\n      );\n      if (itemIndex === -1) {\n        return { success: false, error: \"Item not found\" };\n      }\n\n      const result = await deleteSpreadsheetRow(this.sheetName, itemIndex + 2); // +2 for header row and 1-based indexing\n\n      if (!result.success) {\n        return {\n          success: false,\n          error: result.error || \"Failed to delete data\",\n        };\n      }\n\n      return { success: true, data: undefined };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  private applyFilters(data: T[], filters: FilterOptions): T[] {\n    return data.filter((item) => {\n      // Date range filter\n      if (filters.dateRange) {\n        const itemDate = (item as T & { date?: string }).date;\n        if (itemDate) {\n          const date = new Date(itemDate);\n          if (\n            filters.dateRange.start &&\n            date < new Date(filters.dateRange.start)\n          ) {\n            return false;\n          }\n          if (filters.dateRange.end && date > new Date(filters.dateRange.end)) {\n            return false;\n          }\n        }\n      }\n\n      // Status filter\n      if (\n        filters.status &&\n        (item as T & { status?: string }).status !== filters.status\n      ) {\n        return false;\n      }\n\n      // Category filter\n      if (\n        filters.category &&\n        (item as T & { category?: string }).category !== filters.category\n      ) {\n        return false;\n      }\n\n      // Search filter\n      if (filters.search) {\n        const searchLower = filters.search.toLowerCase();\n        const searchableFields = [\"title\", \"description\", \"name\", \"notes\"];\n        const hasMatch = searchableFields.some((field) => {\n          const value = (item as Record<string, unknown>)[field];\n          return (\n            typeof value === \"string\" &&\n            value.toLowerCase().includes(searchLower)\n          );\n        });\n        if (!hasMatch) return false;\n      }\n\n      return true;\n    });\n  }\n\n  private applyPagination(\n    data: T[],\n    pagination: PaginationOptions,\n  ): DataResponse<T> {\n    const { page = 1, limit = 10 } = pagination;\n    const startIndex = (page - 1) * limit;\n    const endIndex = startIndex + limit;\n    const paginatedData = data.slice(startIndex, endIndex);\n\n    return {\n      data: paginatedData,\n      total: data.length,\n      page,\n      limit,\n      hasMore: endIndex < data.length,\n    };\n  }\n}\n\n// Specific service instances\nclass WorkoutLogService extends BaseDataService<WorkoutLogEntry> {\n  constructor() {\n    super(\"workoutLogs\");\n  }\n\n  async getByMuscleGroup(\n    muscleGroup: string,\n  ): Promise<ApiResult<WorkoutLogEntry[]>> {\n    const result = await this.getAll({ muscleGroup });\n    if (!result.success || !result.data) {\n      return { success: false, error: result.error };\n    }\n    return { success: true, data: result.data.data };\n  }\n\n  async getByDateRange(\n    start: string,\n    end: string,\n  ): Promise<ApiResult<WorkoutLogEntry[]>> {\n    const result = await this.getAll({ dateRange: { start, end } });\n    if (!result.success || !result.data) {\n      return { success: false, error: result.error };\n    }\n    return { success: true, data: result.data.data };\n  }\n}\n\nclass ExerciseService extends BaseDataService<Exercise> {\n  constructor() {\n    super(\"exercises\");\n  }\n\n  async getByMuscleGroup(muscleGroup: string): Promise<ApiResult<Exercise[]>> {\n    const result = await this.getAll({ muscleGroup });\n    if (!result.success || !result.data) {\n      return { success: false, error: result.error };\n    }\n    return { success: true, data: result.data.data };\n  }\n}\n\nclass WorkoutTemplateService extends BaseDataService<WorkoutTemplate> {\n  constructor() {\n    super(\"workoutTemplates\");\n  }\n}\n\nclass WorkoutSessionService extends BaseDataService<WorkoutSession> {\n  constructor() {\n    super(\"workoutSessions\");\n  }\n}\n\nclass VitalSignsService extends BaseDataService<VitalSigns> {\n  constructor() {\n    super(\"vitalSigns\");\n  }\n}\n\nclass BodyMeasurementService extends BaseDataService<BodyMeasurement> {\n  constructor() {\n    super(\"bodyMeasurements\");\n  }\n}\n\nclass NutritionService extends BaseDataService<NutritionEntry> {\n  constructor() {\n    super(\"nutritionEntries\");\n  }\n}\n\nclass MeditationService extends BaseDataService<MeditationEntry> {\n  constructor() {\n    super(\"meditationEntries\");\n  }\n}\n\nclass HealthService extends BaseDataService<HealthEntry> {\n  constructor() {\n    super(\"healthEntries\");\n  }\n}\n\nclass SleepService extends BaseDataService<SleepEntry> {\n  constructor() {\n    super(\"sleepEntries\");\n  }\n}\n\nclass TodoService extends BaseDataService<TodoEntry> {\n  constructor() {\n    super(\"todoEntries\");\n  }\n\n  async getByCategory(category: string): Promise<ApiResult<TodoEntry[]>> {\n    const result = await this.getAll();\n    if (!result.success || !result.data)\n      return { success: false, error: result.error };\n\n    const filtered = result.data.data.filter(\n      (todo: TodoEntry) => todo.category === category,\n    );\n    return { success: true, data: filtered };\n  }\n\n  async getByStatus(\n    status: \"active\" | \"completed\",\n  ): Promise<ApiResult<TodoEntry[]>> {\n    const result = await this.getAll();\n    if (!result.success || !result.data)\n      return { success: false, error: result.error };\n\n    const filtered = result.data.data.filter(\n      (todo: TodoEntry) => todo.status === status,\n    );\n    return { success: true, data: filtered };\n  }\n\n  async markComplete(id: string): Promise<ApiResult<TodoEntry>> {\n    return this.update(id, markTodoComplete());\n  }\n\n  async markIncomplete(id: string): Promise<ApiResult<TodoEntry>> {\n    return this.update(id, markTodoIncomplete());\n  }\n}\n\nclass TodoCategoryService extends BaseDataService<TodoCategory> {\n  constructor() {\n    super(\"todoCategories\");\n  }\n}\n\n// Unified Data Service - Single entry point for all data operations\nexport class DataService {\n  public readonly workoutLogs = new WorkoutLogService();\n  public readonly exercises = new ExerciseService();\n  public readonly workoutTemplates = new WorkoutTemplateService();\n  public readonly workoutSessions = new WorkoutSessionService();\n  public readonly vitalSigns = new VitalSignsService();\n  public readonly bodyMeasurements = new BodyMeasurementService();\n  public readonly nutrition = new NutritionService();\n  public readonly meditation = new MeditationService();\n  public readonly health = new HealthService();\n  public readonly sleep = new SleepService();\n  public readonly todos = new TodoService();\n  public readonly todoCategories = new TodoCategoryService();\n\n  // Batch operations\n  async batchCreate<K extends EntityKey>(\n    entityKey: K,\n    items: Array<Omit<EntityType<K>, \"id\" | \"createdAt\" | \"updatedAt\">>,\n  ): Promise<ApiResult<EntityType<K>[]>> {\n    try {\n      const service = this.getService(entityKey);\n      const results: EntityType<K>[] = [];\n\n      for (const item of items) {\n        const result = await service.create(item);\n        if (!result.success) {\n          return { success: false, error: result.error };\n        }\n        results.push(result.data as EntityType<K>);\n      }\n\n      return { success: true, data: results };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  }\n\n  private getService(\n    entityKey: EntityKey,\n  ): BaseDataService<EntityType<typeof entityKey>> {\n    switch (entityKey) {\n      case \"workoutLogs\":\n        return this.workoutLogs as BaseDataService<\n          EntityType<typeof entityKey>\n        >;\n      case \"exercises\":\n        return this.exercises as BaseDataService<EntityType<typeof entityKey>>;\n      case \"workoutTemplates\":\n        return this.workoutTemplates as BaseDataService<\n          EntityType<typeof entityKey>\n        >;\n      case \"workoutSessions\":\n        return this.workoutSessions as BaseDataService<\n          EntityType<typeof entityKey>\n        >;\n      case \"vitalSigns\":\n        return this.vitalSigns as BaseDataService<EntityType<typeof entityKey>>;\n      case \"bodyMeasurements\":\n        return this.bodyMeasurements as BaseDataService<\n          EntityType<typeof entityKey>\n        >;\n      case \"nutritionEntries\":\n        return this.nutrition as BaseDataService<EntityType<typeof entityKey>>;\n      case \"meditationEntries\":\n        return this.meditation as BaseDataService<EntityType<typeof entityKey>>;\n      case \"healthEntries\":\n        return this.health as BaseDataService<EntityType<typeof entityKey>>;\n      case \"sleepEntries\":\n        return this.sleep as BaseDataService<EntityType<typeof entityKey>>;\n      case \"todoEntries\":\n        return this.todos as BaseDataService<EntityType<typeof entityKey>>;\n      case \"todoCategories\":\n        return this.todoCategories as BaseDataService<\n          EntityType<typeof entityKey>\n        >;\n      default:\n        throw new Error(`Unknown entity key: ${entityKey}`);\n    }\n  }\n}\n\n// Export singleton instance\nexport const dataService = new DataService();\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Plus, Check, X } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport { dataService } from '@/services/DataService';\r\nimport { TodoEntry } from '@/types/DataModels';\r\nimport { createTodoData } from '@/utils/todoHelpers';\r\n\r\ninterface QuickAddTaskProps {\r\n  onTaskAdded?: (task: TodoEntry) => void;\r\n  className?: string;\r\n  compact?: boolean;\r\n}\r\n\r\nexport const QuickAddTask: React.FC<QuickAddTaskProps> = ({ \r\n  onTaskAdded, \r\n  className,\r\n  compact = false \r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!title.trim() || isSubmitting) return;\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const todoData = createTodoData({\r\n        title: title,\r\n        priority: 'medium',\r\n        category: 'General'\r\n      });\r\n\r\n      const result = await dataService.todos.create(todoData);\r\n\r\n      if (result.success && result.data) {\r\n        onTaskAdded?.(result.data);\r\n        setTitle('');\r\n        setIsOpen(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to create task:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTitle('');\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleSubmit();\r\n    } else if (e.key === 'Escape') {\r\n      handleCancel();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return (\r\n      <Button\r\n        variant={compact ? \"ghost\" : \"outline\"}\r\n        size={compact ? \"sm\" : \"default\"}\r\n        onClick={() => setIsOpen(true)}\r\n        className={cn(\r\n          \"gap-2\",\r\n          compact ? \"h-8 px-3 text-xs\" : \"w-full justify-start h-10\",\r\n          className\r\n        )}\r\n      >\r\n        <Plus className={cn(\"h-4 w-4\", compact && \"h-3 w-3\")} />\r\n        {compact ? \"Add\" : \"Add new task\"}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"flex gap-2 p-2 border border-dashed border-primary/30 rounded-lg bg-primary/5\", className)}>\r\n      <Input\r\n        ref={inputRef}\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Type your task here...\"\r\n        onKeyDown={handleKeyDown}\r\n        className=\"flex-1\"\r\n        disabled={isSubmitting}\r\n      />\r\n      \r\n      <div className=\"flex gap-1\">\r\n        <Button\r\n          size=\"sm\"\r\n          onClick={handleSubmit}\r\n          disabled={!title.trim() || isSubmitting}\r\n          className=\"px-3\"\r\n        >\r\n          <Check className=\"h-3 w-3 mr-1\" />\r\n          {isSubmitting ? 'Saving...' : 'Save'}\r\n        </Button>\r\n        \r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={handleCancel}\r\n          className=\"px-2\"\r\n        >\r\n          <X className=\"h-3 w-3\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}; ","\"use client\";\n\n// src/checkbox.tsx\nimport * as React from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar CHECKBOX_NAME = \"Checkbox\";\nvar [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\nvar [CheckboxProviderImpl, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);\nfunction CheckboxProvider(props) {\n  const {\n    __scopeCheckbox,\n    checked: checkedProp,\n    children,\n    defaultChecked,\n    disabled,\n    form,\n    name,\n    onCheckedChange,\n    required,\n    value = \"on\",\n    // @ts-expect-error\n    internal_do_not_use_render\n  } = props;\n  const [checked, setChecked] = useControllableState({\n    prop: checkedProp,\n    defaultProp: defaultChecked ?? false,\n    onChange: onCheckedChange,\n    caller: CHECKBOX_NAME\n  });\n  const [control, setControl] = React.useState(null);\n  const [bubbleInput, setBubbleInput] = React.useState(null);\n  const hasConsumerStoppedPropagationRef = React.useRef(false);\n  const isFormControl = control ? !!form || !!control.closest(\"form\") : (\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    true\n  );\n  const context = {\n    checked,\n    disabled,\n    setChecked,\n    control,\n    setControl,\n    name,\n    form,\n    value,\n    hasConsumerStoppedPropagationRef,\n    required,\n    defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked,\n    isFormControl,\n    bubbleInput,\n    setBubbleInput\n  };\n  return /* @__PURE__ */ jsx(\n    CheckboxProviderImpl,\n    {\n      scope: __scopeCheckbox,\n      ...context,\n      children: isFunction(internal_do_not_use_render) ? internal_do_not_use_render(context) : children\n    }\n  );\n}\nvar TRIGGER_NAME = \"CheckboxTrigger\";\nvar CheckboxTrigger = React.forwardRef(\n  ({ __scopeCheckbox, onKeyDown, onClick, ...checkboxProps }, forwardedRef) => {\n    const {\n      control,\n      value,\n      disabled,\n      checked,\n      required,\n      setControl,\n      setChecked,\n      hasConsumerStoppedPropagationRef,\n      isFormControl,\n      bubbleInput\n    } = useCheckboxContext(TRIGGER_NAME, __scopeCheckbox);\n    const composedRefs = useComposedRefs(forwardedRef, setControl);\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form = control?.form;\n      if (form) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form.addEventListener(\"reset\", reset);\n        return () => form.removeEventListener(\"reset\", reset);\n      }\n    }, [control, setChecked]);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        role: \"checkbox\",\n        \"aria-checked\": isIndeterminate(checked) ? \"mixed\" : checked,\n        \"aria-required\": required,\n        \"data-state\": getState(checked),\n        \"data-disabled\": disabled ? \"\" : void 0,\n        disabled,\n        value,\n        ...checkboxProps,\n        ref: composedRefs,\n        onKeyDown: composeEventHandlers(onKeyDown, (event) => {\n          if (event.key === \"Enter\") event.preventDefault();\n        }),\n        onClick: composeEventHandlers(onClick, (event) => {\n          setChecked((prevChecked) => isIndeterminate(prevChecked) ? true : !prevChecked);\n          if (bubbleInput && isFormControl) {\n            hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n            if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n          }\n        })\n      }\n    );\n  }\n);\nCheckboxTrigger.displayName = TRIGGER_NAME;\nvar Checkbox = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked,\n      defaultChecked,\n      required,\n      disabled,\n      value,\n      onCheckedChange,\n      form,\n      ...checkboxProps\n    } = props;\n    return /* @__PURE__ */ jsx(\n      CheckboxProvider,\n      {\n        __scopeCheckbox,\n        checked,\n        defaultChecked,\n        disabled,\n        required,\n        onCheckedChange,\n        name,\n        form,\n        value,\n        internal_do_not_use_render: ({ isFormControl }) => /* @__PURE__ */ jsxs(Fragment, { children: [\n          /* @__PURE__ */ jsx(\n            CheckboxTrigger,\n            {\n              ...checkboxProps,\n              ref: forwardedRef,\n              __scopeCheckbox\n            }\n          ),\n          isFormControl && /* @__PURE__ */ jsx(\n            CheckboxBubbleInput,\n            {\n              __scopeCheckbox\n            }\n          )\n        ] })\n      }\n    );\n  }\n);\nCheckbox.displayName = CHECKBOX_NAME;\nvar INDICATOR_NAME = \"CheckboxIndicator\";\nvar CheckboxIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return /* @__PURE__ */ jsx(\n      Presence,\n      {\n        present: forceMount || isIndeterminate(context.checked) || context.checked === true,\n        children: /* @__PURE__ */ jsx(\n          Primitive.span,\n          {\n            \"data-state\": getState(context.checked),\n            \"data-disabled\": context.disabled ? \"\" : void 0,\n            ...indicatorProps,\n            ref: forwardedRef,\n            style: { pointerEvents: \"none\", ...props.style }\n          }\n        )\n      }\n    );\n  }\n);\nCheckboxIndicator.displayName = INDICATOR_NAME;\nvar BUBBLE_INPUT_NAME = \"CheckboxBubbleInput\";\nvar CheckboxBubbleInput = React.forwardRef(\n  ({ __scopeCheckbox, ...props }, forwardedRef) => {\n    const {\n      control,\n      hasConsumerStoppedPropagationRef,\n      checked,\n      defaultChecked,\n      required,\n      disabled,\n      name,\n      value,\n      form,\n      bubbleInput,\n      setBubbleInput\n    } = useCheckboxContext(BUBBLE_INPUT_NAME, __scopeCheckbox);\n    const composedRefs = useComposedRefs(forwardedRef, setBubbleInput);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = bubbleInput;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      const bubbles = !hasConsumerStoppedPropagationRef.current;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        input.indeterminate = isIndeterminate(checked);\n        setChecked.call(input, isIndeterminate(checked) ? false : checked);\n        input.dispatchEvent(event);\n      }\n    }, [bubbleInput, prevChecked, checked, hasConsumerStoppedPropagationRef]);\n    const defaultCheckedRef = React.useRef(isIndeterminate(checked) ? false : checked);\n    return /* @__PURE__ */ jsx(\n      Primitive.input,\n      {\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: defaultChecked ?? defaultCheckedRef.current,\n        required,\n        disabled,\n        name,\n        value,\n        form,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0,\n          // We transform because the input is absolutely positioned but we have\n          // rendered it **after** the button. This pulls it back to sit on top\n          // of the button.\n          transform: \"translateX(-100%)\"\n        }\n      }\n    );\n  }\n);\nCheckboxBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction getState(checked) {\n  return isIndeterminate(checked) ? \"indeterminate\" : checked ? \"checked\" : \"unchecked\";\n}\nexport {\n  Checkbox,\n  CheckboxIndicator,\n  CheckboxIndicator as Indicator,\n  Checkbox as Root,\n  createCheckboxScope,\n  CheckboxBubbleInput as unstable_BubbleInput,\n  CheckboxBubbleInput as unstable_CheckboxBubbleInput,\n  CheckboxProvider as unstable_CheckboxProvider,\n  CheckboxTrigger as unstable_CheckboxTrigger,\n  CheckboxProvider as unstable_Provider,\n  CheckboxTrigger as unstable_Trigger\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\r\nimport { Check } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator\r\n      className={cn(\"flex items-center justify-center text-current\")}\r\n    >\r\n      <Check className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n))\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\nexport { Checkbox } ","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Edit2, Check, X, Trash2 } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport { dataService } from '@/services/DataService';\r\nimport { TodoEntry } from '@/types/DataModels';\r\nimport { updateTodoData } from '@/utils/todoHelpers';\r\n\r\ninterface InlineEditableTaskProps {\r\n  task: TodoEntry;\r\n  onTaskUpdated?: (task: TodoEntry) => void;\r\n  onTaskDeleted?: (taskId: string) => void;\r\n  className?: string;\r\n  compact?: boolean;\r\n}\r\n\r\nexport const InlineEditableTask: React.FC<InlineEditableTaskProps> = ({\r\n  task,\r\n  onTaskUpdated,\r\n  onTaskDeleted,\r\n  className,\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [title, setTitle] = useState(task.title || '');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTitle(task.title || '');\r\n  }, [task.title]);\r\n\r\n  useEffect(() => {\r\n    if (isEditing && inputRef.current) {\r\n      inputRef.current.focus();\r\n      inputRef.current.select();\r\n    }\r\n  }, [isEditing]);\r\n\r\n  const handleSave = async () => {\r\n    if (!title?.trim() || isSubmitting) return;\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const todoUpdateData = updateTodoData(task, {\r\n        title: title.trim()\r\n      });\r\n\r\n      const result = await dataService.todos.update(task.id, todoUpdateData);\r\n\r\n      if (result.success && result.data) {\r\n        onTaskUpdated?.(result.data);\r\n        setIsEditing(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update task:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTitle(task.title || '');\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleToggleComplete = async () => {\r\n    try {\r\n      const result = task.isCompleted \r\n        ? await dataService.todos.markIncomplete(task.id)\r\n        : await dataService.todos.markComplete(task.id);\r\n      \r\n      if (result.success && result.data) {\r\n        onTaskUpdated?.(result.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to toggle task completion:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (confirm('Are you sure you want to delete this task?')) {\r\n      try {\r\n        const result = await dataService.todos.delete(task.id);\r\n        if (result.success) {\r\n          onTaskDeleted?.(task.id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to delete task:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSave();\r\n    } else if (e.key === 'Escape') {\r\n      handleCancel();\r\n    }\r\n  };\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <div className={cn(\r\n        \"flex items-center gap-3 p-2 rounded-lg border bg-card\",\r\n        className\r\n      )}>\r\n        <Checkbox\r\n          checked={task.isCompleted}\r\n          onCheckedChange={handleToggleComplete}\r\n          className=\"flex-shrink-0\"\r\n        />\r\n        \r\n        <Input\r\n          ref={inputRef}\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          className=\"flex-1\"\r\n          disabled={isSubmitting}\r\n        />\r\n        \r\n        <div className=\"flex gap-1\">\r\n          <Button\r\n            size=\"sm\"\r\n            onClick={handleSave}\r\n            disabled={!title?.trim() || isSubmitting}\r\n            className=\"h-8 px-2\"\r\n          >\r\n            <Check className=\"h-3 w-3\" />\r\n          </Button>\r\n          \r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={handleCancel}\r\n            className=\"h-8 px-2\"\r\n          >\r\n            <X className=\"h-3 w-3\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\r\n      \"flex items-center gap-3 p-2 rounded-lg border transition-colors hover:bg-muted/50 group\",\r\n      task.isCompleted && \"opacity-60\",\r\n      className\r\n    )}>\r\n      <Checkbox\r\n        checked={task.isCompleted}\r\n        onCheckedChange={handleToggleComplete}\r\n        className=\"flex-shrink-0\"\r\n      />\r\n      \r\n      <div \r\n        className={cn(\r\n          \"flex-1 text-sm cursor-pointer\",\r\n          task.isCompleted && \"line-through text-muted-foreground\"\r\n        )}\r\n        onClick={() => setIsEditing(true)}\r\n      >\r\n        {task.title || 'Untitled Task'}\r\n      </div>\r\n      \r\n      <div className=\"flex gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={() => setIsEditing(true)}\r\n          className=\"h-8 w-8 p-0\"\r\n        >\r\n          <Edit2 className=\"h-3 w-3\" />\r\n        </Button>\r\n        \r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={handleDelete}\r\n          className=\"h-8 w-8 p-0 text-red-600 hover:text-red-700\"\r\n        >\r\n          <Trash2 className=\"h-3 w-3\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { CheckCircle2, Search, Eye, EyeOff } from 'lucide-react';\r\nimport { dataService } from '@/services/DataService';\r\nimport { TodoEntry } from '@/types/DataModels';\r\nimport { DashboardLayout } from '@/components/DashboardLayout';\r\nimport { QuickAddTask } from '@/components/ui/QuickAddTask';\r\nimport { InlineEditableTask } from '@/components/ui/InlineEditableTask';\r\n\r\nconst TodosPage: React.FC = () => {\r\n  const [todos, setTodos] = useState<TodoEntry[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showCompleted, setShowCompleted] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadTodos();\r\n  }, []);\r\n\r\n  const loadTodos = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const result = await dataService.todos.getAll();\r\n      if (result.success && result.data) {\r\n        setTodos(result.data.data);\r\n      } else {\r\n        setError(result.error || 'Failed to load todos');\r\n      }\r\n    } catch {\r\n      setError('Failed to load todos');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTaskAdded = (newTask: TodoEntry) => {\r\n    setTodos(prev => [newTask, ...prev]);\r\n  };\r\n\r\n  const handleTaskUpdated = (updatedTask: TodoEntry) => {\r\n    setTodos(prev => prev.map(task => \r\n      task.id === updatedTask.id ? updatedTask : task\r\n    ));\r\n  };\r\n\r\n  const handleTaskDeleted = (taskId: string) => {\r\n    setTodos(prev => prev.filter(task => task.id !== taskId));\r\n  };\r\n\r\n  // Filter todos\r\n  const filteredTodos = todos.filter(todo => {\r\n    // Search filter\r\n    if (searchTerm && !todo.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n      return false;\r\n    }\r\n    \r\n    // Show/hide completed\r\n    if (!showCompleted && todo.isCompleted) {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  });\r\n\r\n  const activeTodos = todos.filter(todo => !todo.isCompleted);\r\n  const completedTodos = todos.filter(todo => todo.isCompleted);\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardLayout>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\r\n            <p className=\"mt-2 text-muted-foreground\">Loading tasks...</p>\r\n          </div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold\">Tasks</h1>\r\n            <p className=\"text-muted-foreground\">Simple todo list</p>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            {completedTodos.length > 0 && (\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => setShowCompleted(!showCompleted)}\r\n                className=\"gap-2\"\r\n              >\r\n                {showCompleted ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n                {showCompleted ? 'Hide' : 'Show'} completed ({completedTodos.length})\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Quick Add Task */}\r\n        <QuickAddTask \r\n          onTaskAdded={handleTaskAdded}\r\n          className=\"max-w-2xl\"\r\n        />\r\n\r\n        {/* Search */}\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n              <Input\r\n                placeholder=\"Search tasks...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <Card className=\"border-red-200 bg-red-50\">\r\n            <CardContent className=\"p-4\">\r\n              <div className=\"flex items-center gap-2 text-red-800\">\r\n                <span>{error}</span>\r\n                <Button variant=\"ghost\" size=\"sm\" onClick={() => setError(null)}>\r\n                  ×\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Tasks List */}\r\n        <div className=\"space-y-4\">\r\n          {filteredTodos.length === 0 ? (\r\n            <Card>\r\n              <CardContent className=\"p-8 text-center\">\r\n                <CheckCircle2 className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\r\n                <h3 className=\"text-lg font-medium mb-2\">No tasks found</h3>\r\n                <p className=\"text-muted-foreground mb-4\">\r\n                  {searchTerm \r\n                    ? 'Try adjusting your search term'\r\n                    : activeTodos.length === 0 \r\n                    ? 'Add your first task above to get started'\r\n                    : 'All your tasks are completed!'\r\n                  }\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          ) : (\r\n            <div className=\"grid gap-3\">\r\n              {filteredTodos.map(todo => (\r\n                <InlineEditableTask\r\n                  key={todo.id}\r\n                  task={todo}\r\n                  onTaskUpdated={handleTaskUpdated}\r\n                  onTaskDeleted={handleTaskDeleted}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Stats */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"text-sm\">Summary</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex gap-4 text-sm\">\r\n              <span>{activeTodos.length} active</span>\r\n              <span>{completedTodos.length} completed</span>\r\n              <span>{todos.length} total</span>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default TodosPage; "],"names":["__iconNode","CircleCheck","createLucideIcon","EyeOff","Eye","Pen","createTodoData","params","updateTodoData","existingTodo","updates","_a","markTodoComplete","markTodoIncomplete","convertToSpreadsheetFormat","data","result","convertFromSpreadsheetFormat","rawData","parseBoolean","value","normalized","parseJSON","formatTodoForDisplay","todo","SHEET_MAPPING","generateId","addTimestamps","now","BaseDataService","entityKey","filters","pagination","readSpreadsheetData","item","error","id","entityData","spreadsheetData","createSpreadsheetRow","allData","itemIndex","updateData","updateSpreadsheetRow","deleteSpreadsheetRow","itemDate","date","searchLower","field","page","limit","startIndex","endIndex","WorkoutLogService","muscleGroup","start","end","ExerciseService","WorkoutTemplateService","WorkoutSessionService","VitalSignsService","BodyMeasurementService","NutritionService","MeditationService","HealthService","SleepService","TodoService","category","status","TodoCategoryService","DataService","__publicField","items","service","results","dataService","QuickAddTask","onTaskAdded","className","compact","isOpen","setIsOpen","useState","title","setTitle","isSubmitting","setIsSubmitting","inputRef","useRef","useEffect","handleSubmit","todoData","handleCancel","handleKeyDown","e","cn","jsx","Input","jsxs","Button","Check","X","Plus","CHECKBOX_NAME","createCheckboxContext","createCheckboxScope","createContextScope","CheckboxProviderImpl","useCheckboxContext","CheckboxProvider","props","__scopeCheckbox","checkedProp","children","defaultChecked","disabled","form","name","onCheckedChange","required","internal_do_not_use_render","checked","setChecked","useControllableState","control","setControl","React.useState","bubbleInput","setBubbleInput","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","context","isIndeterminate","isFunction","TRIGGER_NAME","CheckboxTrigger","React.forwardRef","onKeyDown","onClick","checkboxProps","forwardedRef","composedRefs","useComposedRefs","initialCheckedStateRef","React.useEffect","reset","Primitive","getState","composeEventHandlers","event","prevChecked","Checkbox","Fragment","CheckboxBubbleInput","INDICATOR_NAME","CheckboxIndicator","forceMount","indicatorProps","Presence","BUBBLE_INPUT_NAME","usePrevious","controlSize","useSize","input","inputProto","bubbles","defaultCheckedRef","ref","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","InlineEditableTask","task","onTaskUpdated","onTaskDeleted","isEditing","setIsEditing","handleSave","todoUpdateData","handleToggleComplete","handleDelete","Edit2","Trash2","TodosPage","todos","setTodos","searchTerm","setSearchTerm","showCompleted","setShowCompleted","loading","setLoading","setError","loadTodos","handleTaskAdded","newTask","prev","handleTaskUpdated","updatedTask","handleTaskDeleted","taskId","filteredTodos","activeTodos","completedTodos","DashboardLayout","Card","CardContent","Search","CheckCircle2","CardHeader","CardTitle"],"mappings":"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","x_google_ignoreList":[0,1,2,3,7]}