import{c as y}from"./index-CcxtFsBt.js";import{j as d,c as w,h as I,i as T,k as F,l as _,r as L}from"./pwa-components-Dgy0VUO_.js";import{E as m,G as E,H as A,I as W,d as $,P as k}from"./index-DUonwxg2.js";/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const G=[["path",{d:"M21.801 10A10 10 0 1 1 17 3.335",key:"yps3ct"}],["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}]],q=y("circle-check-big",G);/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const D=[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["polyline",{points:"12 6 12 12 16 14",key:"68esgv"}]],K=y("clock",D),C=I("inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground hover:bg-primary/80",secondary:"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",destructive:"border-transparent bg-destructive/90 text-destructive-foreground hover:bg-destructive/80",outline:"text-foreground",success:"border-transparent bg-success/90 text-success-foreground hover:bg-success/80",warning:"border-transparent bg-warning/90 text-warning-foreground hover:bg-warning/80",info:"border-transparent bg-info/90 text-info-foreground hover:bg-info/80",gradient:"border-transparent bg-gradient-to-r from-primary to-accent text-white shadow-sm",glass:"border-transparent backdrop-blur-md bg-background/50 text-foreground shadow-sm",pill:"border border-border/30 bg-transparent text-foreground hover:bg-muted/50"}},defaultVariants:{variant:"default"}});function Q({className:e,variant:i,...r}){return d.jsx("div",{className:w(C({variant:i}),e),...r})}const h=()=>`log_${new Date().getTime()}_${Math.random().toString(36).substring(2,9)}`,u=T()(F((e,i)=>({workoutLogs:[],isLoading:!1,error:null,isDataFetched:!1,fetchWorkoutLogs:async(r=!1)=>{if(!(!r&&i().isDataFetched&&navigator.onLine)){if(e({isLoading:!0,error:null}),!navigator.onLine){if(i().workoutLogs.length>0){e({isLoading:!1,isDataFetched:!0});return}e({error:"Offline and no data cached.",isLoading:!1,isDataFetched:!1});return}try{const o=await W("Workout_Logs");if(o.success&&o.data){const l=o.data.map((s,a)=>{const n={date:String(s.date||s.Date||"N/A"),muscleGroup:String(s.muscleGroup||s["Muscle Group"]||"N/A"),exercise:String(s.exercise||s.Exercise||"N/A"),reps:parseFloat(String(s.reps||s.Reps)),weight:parseFloat(String(s.weight||s.Weight)),rating:parseFloat(String(s.rating||s.Rating)),restTime:s.restTime||s["Rest Time"]||s["Rest (s)"]?parseFloat(String(s.restTime||s["Rest Time"]||s["Rest (s)"])):null};return n.date==="N/A"||n.exercise==="N/A"?(console.warn("Skipping row due to missing essential data (date/exercise) after mapping:",s),null):(isNaN(n.reps)&&(n.reps=0),isNaN(n.weight)&&(n.weight=0),isNaN(n.rating)&&(n.rating=0),n.restTime!==null&&isNaN(n.restTime)&&(n.restTime=null),{...n,id:h(),rowIndex:a+2,isSynced:!0})}).filter(s=>s!==null);e({workoutLogs:l,isLoading:!1,isDataFetched:!0,error:null})}else console.error("Failed to fetch workout logs from sheet:",o.error),e({error:o.error||"Failed to fetch workout logs.",isLoading:!1,isDataFetched:!1})}catch(t){const o=t;console.error("Error in fetchWorkoutLogs:",o),e({error:o.message,isLoading:!1,isDataFetched:!1})}}},addWorkoutLog:async r=>{const t=h(),o={...r,id:t,isSynced:!1};if(e(l=>({workoutLogs:[o,...l.workoutLogs],isLoading:navigator.onLine,error:null})),!navigator.onLine)return console.warn("Offline: Workout log added to local cache. Will sync when online."),o;try{const l="Workout_Logs",s={date:r.date,muscleGroup:r.muscleGroup,exercise:r.exercise,reps:r.reps,weight:r.weight,rating:r.rating,restTime:r.restTime??""},a=await m(l,s);if(a.success)return e(n=>({workoutLogs:n.workoutLogs.map(c=>c.id===t?{...c,isSynced:!0,rowIndex:a.rowId?parseInt(a.rowId.split("!").pop()||"0"):void 0}:c),isLoading:!1})),{...o,isSynced:!0};throw new Error(a.error||"Failed to create spreadsheet row.")}catch(l){return console.error("Failed to add workout log to sheet:",l),e(s=>({isLoading:!1,error:l.message,workoutLogs:s.workoutLogs.map(a=>a.id===t?{...a,isSynced:!1}:a)})),o}},editWorkoutLog:async r=>{navigator.onLine?e({isLoading:!0}):console.warn("Attempted to edit workout log while offline. Applying optimistically to cache.");try{if(typeof r.rowIndex!="number")throw new Error("Row index is missing for updating the log.");const t="Workout_Logs",l={...{date:r.date,muscleGroup:r.muscleGroup,exercise:r.exercise,reps:r.reps,weight:r.weight,rating:r.rating,restTime:r.restTime}};l.restTime===null&&(l.restTime="");const s=await A(t,r.rowIndex,l);if(!s.success)throw new Error(s.error||"Failed to update spreadsheet row.");e(a=>({workoutLogs:a.workoutLogs.map(n=>n.id===r.id?{...n,...r}:n),isLoading:!1,error:null}))}catch(t){console.error("Failed to edit workout log:",t),e({error:t.message,isLoading:!1})}},removeWorkoutLog:async r=>{const t=i().workoutLogs.find(o=>o.id===r);if(!t||typeof t.rowIndex!="number"){e({error:"Log not found or rowIndex missing for deletion.",isLoading:!1}),console.error("Log not found or rowIndex missing for deletion:",r,t);return}navigator.onLine?e({isLoading:!0}):console.warn("Attempted to delete workout log while offline. Applying optimistically to cache.");try{const l=await E("Workout_Logs",t.rowIndex);if(!l.success)throw new Error(l.error||"Failed to delete spreadsheet row.");e(s=>({workoutLogs:s.workoutLogs.filter(a=>a.id!==r),isLoading:!1,error:null}))}catch(o){console.error("Failed to delete workout log:",o),e({error:o.message,isLoading:!1})}},syncPendingLogs:async()=>{const r=i().workoutLogs.filter(t=>!t.isSynced);if(r.length!==0&&navigator.onLine){e({isLoading:!0,error:null});for(const t of r)try{const o={date:t.date,muscleGroup:t.muscleGroup,exercise:t.exercise,reps:t.reps,weight:t.weight,rating:t.rating,restTime:t.restTime??""},l=await m("Workout_Logs",o);if(l.success)e(s=>({workoutLogs:s.workoutLogs.map(a=>a.id===t.id?{...a,isSynced:!0,rowIndex:l.rowId?parseInt(l.rowId.split("!").pop()||"0"):void 0}:a)}));else throw new Error(l.error||"Sync failed for a log")}catch(o){console.error("Error syncing log:",t.id,o),e({error:o.message});break}e({isLoading:!1})}}}),{name:"workout-log-storage",storage:_(()=>localStorage),onRehydrateStorage:e=>(i,r)=>{r&&console.error("Error rehydrating workout log store:",r),typeof navigator<"u"&&navigator.onLine&&setTimeout(()=>{u&&typeof u.getState=="function"&&typeof u.getState().syncPendingLogs=="function"?u.getState().syncPendingLogs():console.warn("Attempted to call syncPendingLogs on rehydration, but the store or method was not available at that moment.")},0)},partialize:e=>({workoutLogs:e.workoutLogs,isDataFetched:e.isDataFetched})}));typeof window<"u"&&window.addEventListener("online",()=>{u.getState().syncPendingLogs()});var f="Progress",p=100,[M,Y]=$(f),[j,V]=M(f),b=L.forwardRef((e,i)=>{const{__scopeProgress:r,value:t=null,max:o,getValueLabel:l=O,...s}=e;(o||o===0)&&!v(o)&&console.error(R(`${o}`,"Progress"));const a=v(o)?o:p;t!==null&&!x(t,a)&&console.error(U(`${t}`,"Progress"));const n=x(t,a)?t:null,c=g(n)?l(n,a):void 0;return d.jsx(j,{scope:r,value:n,max:a,children:d.jsx(k.div,{"aria-valuemax":a,"aria-valuemin":0,"aria-valuenow":g(n)?n:void 0,"aria-valuetext":c,role:"progressbar","data-state":P(n,a),"data-value":n??void 0,"data-max":a,...s,ref:i})})});b.displayName=f;var N="ProgressIndicator",S=L.forwardRef((e,i)=>{const{__scopeProgress:r,...t}=e,o=V(N,r);return d.jsx(k.div,{"data-state":P(o.value,o.max),"data-value":o.value??void 0,"data-max":o.max,...t,ref:i})});S.displayName=N;function O(e,i){return`${Math.round(e/i*100)}%`}function P(e,i){return e==null?"indeterminate":e===i?"complete":"loading"}function g(e){return typeof e=="number"}function v(e){return g(e)&&!isNaN(e)&&e>0}function x(e,i){return g(e)&&!isNaN(e)&&e<=i&&e>=0}function R(e,i){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${i}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${p}\`.`}function U(e,i){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${i}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${p} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var B=b,z=S;function Z({className:e,value:i,...r}){return d.jsx(B,{"data-slot":"progress",className:w("bg-primary/20 relative h-2 w-full overflow-hidden rounded-full",e),...r,children:d.jsx(z,{"data-slot":"progress-indicator",className:"bg-primary h-full w-full flex-1 transition-all",style:{transform:`translateX(-${100-(i||0)}%)`}})})}export{Q as B,K as C,Z as P,q as a,u};
//# sourceMappingURL=progress-BSijd1yB.js.map
