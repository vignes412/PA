const w=(e,t)=>t.some(n=>e instanceof n);let B,b;function T(){return B||(B=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function j(){return b||(b=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const m=new WeakMap,y=new WeakMap,l=new WeakMap;function x(e){const t=new Promise((n,o)=>{const r=()=>{e.removeEventListener("success",i),e.removeEventListener("error",s)},i=()=>{n(d(e.result)),r()},s=()=>{o(e.error),r()};e.addEventListener("success",i),e.addEventListener("error",s)});return l.set(t,e),t}function C(e){if(m.has(e))return;const t=new Promise((n,o)=>{const r=()=>{e.removeEventListener("complete",i),e.removeEventListener("error",s),e.removeEventListener("abort",s)},i=()=>{n(),r()},s=()=>{o(e.error||new DOMException("AbortError","AbortError")),r()};e.addEventListener("complete",i),e.addEventListener("error",s),e.addEventListener("abort",s)});m.set(e,t)}let I={get(e,t,n){if(e instanceof IDBTransaction){if(t==="done")return m.get(e);if(t==="store")return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return d(e[t])},set(e,t,n){return e[t]=n,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function M(e){I=e(I)}function k(e){return j().includes(e)?function(...t){return e.apply(D(this),t),d(this.request)}:function(...t){return d(e.apply(D(this),t))}}function A(e){return typeof e=="function"?k(e):(e instanceof IDBTransaction&&C(e),w(e,T())?new Proxy(e,I):e)}function d(e){if(e instanceof IDBRequest)return x(e);if(y.has(e))return y.get(e);const t=A(e);return t!==e&&(y.set(e,t),l.set(t,e)),t}const D=e=>l.get(e);function N(e,t,{blocked:n,upgrade:o,blocking:r,terminated:i}={}){const s=indexedDB.open(e,t),u=d(s);return o&&s.addEventListener("upgradeneeded",c=>{o(d(s.result),c.oldVersion,c.newVersion,d(s.transaction),c)}),n&&s.addEventListener("blocked",c=>n(c.oldVersion,c.newVersion,c)),u.then(c=>{i&&c.addEventListener("close",()=>i()),r&&c.addEventListener("versionchange",a=>r(a.oldVersion,a.newVersion,a))}).catch(()=>{}),u}const v=["get","getKey","getAll","getAllKeys","count"],R=["put","add","delete","clear"],h=new Map;function g(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(h.get(t))return h.get(t);const n=t.replace(/FromIndex$/,""),o=t!==n,r=R.includes(n);if(!(n in(o?IDBIndex:IDBObjectStore).prototype)||!(r||v.includes(n)))return;const i=async function(s,...u){const c=this.transaction(s,r?"readwrite":"readonly");let a=c.store;return o&&(a=a.index(u.shift())),(await Promise.all([a[n](...u),r&&c.done]))[0]};return h.set(t,i),i}M(e=>({...e,get:(t,n,o)=>g(t,n)||e.get(t,n,o),has:(t,n)=>!!g(t,n)||e.has(t,n)}));const V=["continue","continuePrimaryKey","advance"],S={},E=new WeakMap,O=new WeakMap,W={get(e,t){if(!V.includes(t))return e[t];let n=S[t];return n||(n=S[t]=function(...o){E.set(this,O.get(this)[t](...o))}),n}};async function*_(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;t=t;const n=new Proxy(t,W);for(O.set(n,t),l.set(n,D(t));t;)yield n,t=await(E.get(n)||t.continue()),E.delete(n)}function p(e,t){return t===Symbol.asyncIterator&&w(e,[IDBIndex,IDBObjectStore,IDBCursor])||t==="iterate"&&w(e,[IDBIndex,IDBObjectStore])}M(e=>({...e,get(t,n,o){return p(t,n)?_:e.get(t,n,o)},has(t,n){return p(t,n)||e.has(t,n)}}));const F="workout-log-pwa",K=1,f="sync-queue",P="workout-data",L="settings";async function q(){return N(F,K,{upgrade(e){if(e.objectStoreNames.contains(f)||e.createObjectStore(f,{keyPath:"id"}),!e.objectStoreNames.contains(P)){const t=e.createObjectStore(P,{keyPath:"id"});t.createIndex("type","type"),t.createIndex("date","date")}e.objectStoreNames.contains(L)||e.createObjectStore(L,{keyPath:"key"})}})}async function U(){const t=(await q()).transaction(f,"readwrite"),n=t.objectStore(f),o=await n.getAll();for(const r of o)try{(await fetch(r.endpoint,{method:r.method,headers:r.headers,body:r.method!=="GET"?JSON.stringify(r.body):void 0})).ok?await n.delete(r.id):(r.retries+=1,r.retries<5?await n.put(r):(await n.delete(r.id),console.error(`Failed to sync ${r.endpoint} after 5 retries`)))}catch(i){console.error("Error processing sync queue item:",i)}await t.done}function G(){window.addEventListener("online",async()=>{console.log("App is online. Processing sync queue..."),await U()}),window.addEventListener("offline",()=>{console.log("App is offline. Requests will be queued for later.")})}export{U as p,G as r};
//# sourceMappingURL=db-utils-DgoSxAK8.js.map
