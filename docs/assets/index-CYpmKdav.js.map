{"version":3,"file":"index-CYpmKdav.js","sources":["../../node_modules/gapi-script/index.js"],"sourcesContent":["import { gapi, gapiComplete } from './gapiScript';\n\n/**\n * Function to load gapi auth2 from a gapi that you provied\n * Check full docs here: https://developers.google.com/identity/sign-in/web/reference#auth_setup\n * @param {Object} gapiScript gapi script object\n * @param {string} clientId Your google clientID string\n * @param {Array.<string[]>} scopes The scopes to request, as a space-delimited string. Optional if fetch_basic_profile is not set to false. Check possible scopes on google docs: https://developers.google.com/identity/protocols/oauth2/scopes\n */\nconst loadAuth2 = async function (gapiScript, clientId, scopes) {\n  return new Promise(resolve => {\n    gapiScript.load('auth2', () => {\n      resolve(gapiScript.auth2.init({\n        client_id: clientId,\n        scope: scopes\n      }));\n    });\n  });\n}\n\n/**\n * Function to init gapi auth2 with props\n * @param {Object} gapiScript gapi script object\n * @param {*} props Possible props to init gapi auth2, check the options on google docs: https://developers.google.com/identity/sign-in/web/reference#gapiauth2clientconfig\n */\nconst loadAuth2WithProps = async function (gapiScript, props) {\n  return new Promise(resolve => {\n    gapiScript.load('auth2', () => {\n      resolve(gapiScript.auth2.init(props));\n    });\n  });\n}\n\n/**\n *\n * @param {Object} gapiScript gapi script object\n * @param {string} clientId Your google clientID string\n * @param {Array.<string[]>} scopes The scopes to request, as a space-delimited string. Optional if fetch_basic_profile is not set to false. Check possible scopes on google docs: https://developers.google.com/identity/protocols/oauth2/scopes\n */\nconst loadClientAuth2 = async function (gapiScript, clientId, scopes) {\n  return new Promise(resolve => {\n      gapiScript.load('client', () => {\n          resolve(gapiScript.client.init({\n              client_id: clientId,\n              scope: scopes\n          }));\n      });\n      gapiScript.load('auth2', () => {\n          resolve(gapiScript.client.init({\n              client_id: clientId,\n              scope: scopes\n          }));\n      });\n  });\n}\n\n/**\n * A very special function to load the gapi inside the DOM, directly.\n * So it'll load the real and most recent gapi-scrip from google and attach to DOM:\n * let gapi = loadGapiInsideDOM();\n * Now you can use it anywhere.\n */\nconst loadGapiInsideDOM = async function () {\n  return new Promise(resolve => {\n    const element = document.getElementsByTagName('script')[0];\n    const js = document.createElement('script');\n    js.id = 'google-platform';\n    js.src = '//apis.google.com/js/platform.js';\n    js.async = true;\n    js.defer = true;\n    element.parentNode.insertBefore(js, element);\n    js.onload = async () => {\n      resolve(window.gapi);\n    }\n  });\n}\n\nexport {\n  gapi,\n  gapiComplete,\n  loadAuth2,\n  loadAuth2WithProps,\n  loadClientAuth2,\n  loadGapiInsideDOM,\n};\n"],"names":["loadAuth2","gapiScript","clientId","scopes","resolve","loadAuth2WithProps","props","loadClientAuth2","loadGapiInsideDOM","element","js"],"mappings":"oDASK,MAACA,EAAY,eAAgBC,EAAYC,EAAUC,EAAQ,CAC9D,OAAO,IAAI,QAAQC,GAAW,CAC5BH,EAAW,KAAK,QAAS,IAAM,CAC7BG,EAAQH,EAAW,MAAM,KAAK,CAC5B,UAAWC,EACX,MAAOC,CACf,CAAO,CAAC,CACR,CAAK,CACL,CAAG,CACH,EAOME,EAAqB,eAAgBJ,EAAYK,EAAO,CAC5D,OAAO,IAAI,QAAQF,GAAW,CAC5BH,EAAW,KAAK,QAAS,IAAM,CAC7BG,EAAQH,EAAW,MAAM,KAAKK,CAAK,CAAC,CAC1C,CAAK,CACL,CAAG,CACH,EAQMC,EAAkB,eAAgBN,EAAYC,EAAUC,EAAQ,CACpE,OAAO,IAAI,QAAQC,GAAW,CAC1BH,EAAW,KAAK,SAAU,IAAM,CAC5BG,EAAQH,EAAW,OAAO,KAAK,CAC3B,UAAWC,EACX,MAAOC,CACrB,CAAW,CAAC,CACZ,CAAO,EACDF,EAAW,KAAK,QAAS,IAAM,CAC3BG,EAAQH,EAAW,OAAO,KAAK,CAC3B,UAAWC,EACX,MAAOC,CACrB,CAAW,CAAC,CACZ,CAAO,CACP,CAAG,CACH,EAQMK,EAAoB,gBAAkB,CAC1C,OAAO,IAAI,QAAQJ,GAAW,CAC5B,MAAMK,EAAU,SAAS,qBAAqB,QAAQ,EAAE,CAAC,EACnDC,EAAK,SAAS,cAAc,QAAQ,EAC1CA,EAAG,GAAK,kBACRA,EAAG,IAAM,mCACTA,EAAG,MAAQ,GACXA,EAAG,MAAQ,GACXD,EAAQ,WAAW,aAAaC,EAAID,CAAO,EAC3CC,EAAG,OAAS,SAAY,CACtBN,EAAQ,OAAO,IAAI,CACzB,CACA,CAAG,CACH","x_google_ignoreList":[0]}