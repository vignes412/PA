{"version":3,"file":"ExerciseDBPage-n2UEj1F2.js","sources":["../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../src/hooks/useDebounce.ts","../../src/views/ExerciseDBPage.tsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = parent instanceof HTMLElement ? parent.offsetWidth || 0 : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (document.head.contains(style)) {\n                document.head.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { useState, useEffect } from 'react';\r\n\r\n/**\r\n * Custom hook to debounce a value.\r\n * @param value The value to debounce.\r\n * @param delay The delay in milliseconds.\r\n * @returns The debounced value.\r\n */\r\nexport function useDebounce<T>(value: T, delay: number): T {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    // Set debouncedValue to value (passed in) after the specified delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    // Return a cleanup function that will be called every time ...\r\n    // ... useEffect executes, except for the first time.\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]); // Only re-call effect if value or delay changes\r\n\r\n  return debouncedValue;\r\n}\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react'; // Added useCallback\r\nimport { useExercises } from '@/hooks/useConsolidatedApp';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useDebounce } from '../hooks/useDebounce';\r\nimport { DashboardLayout } from '@/components/DashboardLayout'; // Added DashboardLayout import\r\n\r\nconst ExerciseDBPage: React.FC = () => {\r\n  const { exercises, fetchExercises, isLoading, error, getExercisesByMuscleGroup, getMuscleGroupsByExercise, getAllUniqueExerciseNames } = useExercises();\r\n  const [selectedMuscleGroup, setSelectedMuscleGroup] = useState<string>('');\r\n  const [selectedExercise, setSelectedExercise] = useState<string>('');\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n  const [searchResults, setSearchResults] = useState<typeof exercises>([]);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchExercises();\r\n  }, [fetchExercises]);\r\n\r\n  const muscleGroupOptions = useMemo(() => {\r\n    const groups = new Set(exercises.map(ex => ex.muscleGroup));\r\n    return [...Array.from(groups)].sort();\r\n  }, [exercises]);\r\n\r\n  const exerciseOptions = useMemo(() => {\r\n    if (selectedMuscleGroup) {\r\n      return [...getExercisesByMuscleGroup(selectedMuscleGroup)].sort();\r\n    }\r\n    return [...getAllUniqueExerciseNames()].sort();\r\n  }, [selectedMuscleGroup, getAllUniqueExerciseNames, getExercisesByMuscleGroup]);\r\n  \r\n  const handleMuscleGroupChange = (value: string) => {\r\n    setSelectedMuscleGroup(value === \"_all_muscle_groups_\" ? \"\" : value);\r\n    setSelectedExercise(''); \r\n    setSearchTerm('');\r\n    setHasSearched(false);\r\n  };\r\n\r\n  const handleExerciseChange = (value: string) => {\r\n    const actualValue = value === \"_all_exercises_\" ? \"\" : value;\r\n    setSelectedExercise(actualValue);\r\n    if (actualValue) {\r\n        const muscleGroups = getMuscleGroupsByExercise(actualValue);\r\n        if (muscleGroups.length > 0 && !muscleGroups.includes(selectedMuscleGroup)) {\r\n            setSelectedMuscleGroup(muscleGroups[0]);\r\n        }\r\n    }\r\n    setSearchTerm('');\r\n    setHasSearched(false);\r\n  };\r\n\r\n  const handleSearch = useCallback(() => {\r\n    if (!selectedMuscleGroup && !selectedExercise && !debouncedSearchTerm) {\r\n      setSearchResults([]);\r\n      setHasSearched(false);\r\n      return;\r\n    }\r\n\r\n    setHasSearched(true);\r\n    let filtered = exercises;\r\n\r\n    if (selectedMuscleGroup) {\r\n      filtered = filtered.filter(ex => ex.muscleGroup === selectedMuscleGroup);\r\n    }\r\n\r\n    if (selectedExercise) {\r\n      filtered = filtered.filter(ex => ex.exercise === selectedExercise);\r\n    }\r\n    \r\n    if (debouncedSearchTerm) {\r\n        filtered = filtered.filter(ex => \r\n            ex.exercise.toLowerCase().includes(debouncedSearchTerm.toLowerCase()) ||\r\n            ex.muscleGroup.toLowerCase().includes(debouncedSearchTerm.toLowerCase())\r\n        );\r\n    }\r\n\r\n    setSearchResults(filtered);\r\n  }, [exercises, selectedMuscleGroup, selectedExercise, debouncedSearchTerm, setSearchResults, setHasSearched]);\r\n  \r\n  useEffect(() => {\r\n     if (hasSearched || debouncedSearchTerm) {\r\n        handleSearch();\r\n    } else {\r\n        setSearchResults([]);\r\n    }\r\n  // exercises is a dependency of handleSearch, which is a dependency here.\r\n  // No need to list exercises directly if handleSearch correctly lists it.\r\n  }, [debouncedSearchTerm, selectedMuscleGroup, selectedExercise, hasSearched, handleSearch]);\r\n\r\n\r\n  // Image caching (basic example, consider a more robust solution for production)\r\n  const [cachedImages, setCachedImages] = useState<Record<string, string>>({});\r\n  useEffect(() => {\r\n    const updatedCachedImages = { ...cachedImages };\r\n\r\n    searchResults.forEach(ex => {\r\n      if (ex.imageLink && !updatedCachedImages[ex.imageLink]) {\r\n        const img = new Image();\r\n        img.src = ex.imageLink;\r\n        img.onload = () => {\r\n          setCachedImages(prev => ({ ...prev, [ex.imageLink!]: ex.imageLink! }));\r\n        };\r\n        updatedCachedImages[ex.imageLink] = 'loading';\r\n      }\r\n    });\r\n  }, [searchResults, cachedImages]);\r\n  // Initial loading state for the whole page before any search is made\r\n  // The isLoading from useExercises refers to the initial data fetch.\r\n\r\n  if (isLoading && exercises.length === 0) { // Show loading only if exercises are not yet populated\r\n    return (\r\n      <DashboardLayout>\r\n        <div className=\"flex justify-center items-center h-[calc(100vh-var(--header-height,64px))]\">\r\n            <p>Loading exercise data...</p>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <DashboardLayout>\r\n        <div className=\"flex justify-center items-center h-[calc(100vh-var(--header-height,64px))]\">\r\n            <p>Error: {error}</p>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout> { /* Wrap content with DashboardLayout */}\r\n      <div className=\"container mx-auto p-4 md:p-8 bg-background text-foreground\">\r\n        <header className=\"mb-8 text-center\">\r\n          <h1 className=\"text-4xl font-bold tracking-tight text-primary\">Exercise Database</h1>\r\n          <p className=\"text-muted-foreground mt-2\">Explore and discover new exercises.</p>\r\n        </header>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8 p-6 bg-card rounded-xl shadow-lg sticky top-[var(--header-height,64px)] z-10\">\r\n          <div className=\"md:col-span-1\">\r\n            <label htmlFor=\"muscleGroupSelect\" className=\"block text-sm font-medium text-muted-foreground mb-1\">Muscle Group</label>\r\n            <Select value={selectedMuscleGroup || \"_all_muscle_groups_\"} onValueChange={handleMuscleGroupChange}>\r\n              <SelectTrigger id=\"muscleGroupSelect\" className=\"w-full bg-input border-border\">\r\n                <SelectValue placeholder=\"Select Muscle Group\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"_all_muscle_groups_\">All Muscle Groups</SelectItem>\r\n                {muscleGroupOptions.map(group => (\r\n                  <SelectItem key={group} value={group}>{group}</SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"md:col-span-1\">\r\n            <label htmlFor=\"exerciseSelect\" className=\"block text-sm font-medium text-muted-foreground mb-1\">Exercise</label>\r\n            <Select value={selectedExercise || \"_all_exercises_\"} onValueChange={handleExerciseChange}>\r\n              <SelectTrigger id=\"exerciseSelect\" className=\"w-full bg-input border-border\">\r\n                <SelectValue placeholder=\"Select Exercise\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"_all_exercises_\">All Exercises</SelectItem>\r\n                {exerciseOptions.map(ex => (\r\n                  <SelectItem key={ex} value={ex}>{ex}</SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          \r\n          <div className=\"md:col-span-1 flex items-end\">\r\n            <Button onClick={handleSearch} className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\">\r\n              Search Exercises\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Search results area */}\r\n        {hasSearched && isLoading && <div className=\"text-center py-4\"><p>Searching...</p></div>} {/* This isLoading is the one from useExercisesStore, consider a local loading state for search if needed */}\r\n        {!isLoading && hasSearched && searchResults.length === 0 && (\r\n          <div className=\"text-center py-10\">\r\n            <p className=\"text-xl text-muted-foreground\">No exercises found matching your criteria.</p>\r\n            <p className=\"text-sm text-muted-foreground\">Try adjusting your filters or search term.</p>\r\n          </div>\r\n        )}\r\n\r\n        <ScrollArea className=\"h-[calc(100vh-var(--header-height,64px)-200px)]\"> {/* Adjust height considering sticky filter bar and header */}\r\n          <AnimatePresence>\r\n            <motion.div \r\n              className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 pt-4\" /* Added pt-4 for spacing from sticky filter */\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              exit=\"hidden\"\r\n            >\r\n              {searchResults.map((ex, index) => (\r\n                <motion.div\r\n                  key={`${ex.exercise}-${ex.muscleGroup}-${index}`} // More robust key\r\n                  variants={{\r\n                    hidden: { opacity: 0, y: 20 },\r\n                    visible: { opacity: 1, y: 0, transition: { delay: index * 0.05 } }\r\n                  }}\r\n                  layout\r\n                >\r\n                  <Card className=\"overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 ease-in-out bg-card h-full flex flex-col\">\r\n                    <CardHeader className=\"p-0 relative aspect-square\">\r\n                      {ex.imageLink && cachedImages[ex.imageLink] ? (\r\n                        <img \r\n                          src={cachedImages[ex.imageLink]} \r\n                          alt={ex.exercise} \r\n                          className=\"w-full h-full object-cover\" \r\n                          loading=\"lazy\"\r\n                        />\r\n                      ) : ex.imageLink ? (\r\n                        <div className=\"w-full h-full bg-muted flex items-center justify-center\">\r\n                          <p className=\"text-sm text-muted-foreground\">Loading image...</p>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"w-full h-full bg-muted flex items-center justify-center\">\r\n                          <p className=\"text-sm text-muted-foreground\">No Image</p>\r\n                        </div>\r\n                      )}\r\n                    </CardHeader>\r\n                    <CardContent className=\"p-4 flex-grow flex flex-col justify-between\">\r\n                      <div>\r\n                        <CardTitle className=\"text-lg font-semibold text-primary mb-1 truncate\" title={ex.exercise}>{ex.exercise}</CardTitle>\r\n                        <p className=\"text-sm text-muted-foreground mb-2 capitalize\">{ex.muscleGroup}</p>\r\n                        <div className=\"text-xs space-y-1 text-foreground/80\">\r\n                          {ex.difficultyLevel && <p><strong>Difficulty:</strong> {ex.difficultyLevel}</p>}\r\n                          {ex.equipmentRequired && <p><strong>Equipment:</strong> {ex.equipmentRequired}</p>}\r\n                          {ex.exerciseType && <p><strong>Type:</strong> {ex.exerciseType}</p>}\r\n                        </div>\r\n                      </div>\r\n                      {ex.exerciseLink && (\r\n                        <Button variant=\"link\" size=\"sm\" asChild className=\"mt-3 p-0 h-auto self-start\">\r\n                          <a href={ex.exerciseLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            Watch Video\r\n                          </a>\r\n                        </Button>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                </motion.div>\r\n              ))}\r\n            </motion.div>\r\n          </AnimatePresence>\r\n        </ScrollArea>\r\n        {!hasSearched && !isLoading && (\r\n           <div className=\"text-center py-10 mt-8\">\r\n              <p className=\"text-xl text-muted-foreground\">Select filters and click \"Search Exercises\" to view data.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default ExerciseDBPage;\r\n\r\n"],"names":["PopChildMeasure","React.Component","prevProps","element","parent","parentWidth","size","PopChild","children","isPresent","anchorX","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","width","height","top","left","right","x","style","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","isComplete","_","key","React.useEffect","PresenceContext","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","exitingChildren","nextChildren","forceRender","LayoutGroupContext","Fragment","onExit","isEveryExitComplete","isExitComplete","useDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","ExerciseDBPage","exercises","fetchExercises","isLoading","error","getExercisesByMuscleGroup","getMuscleGroupsByExercise","getAllUniqueExerciseNames","useExercises","selectedMuscleGroup","setSelectedMuscleGroup","selectedExercise","setSelectedExercise","searchTerm","setSearchTerm","debouncedSearchTerm","searchResults","setSearchResults","hasSearched","setHasSearched","muscleGroupOptions","groups","ex","exerciseOptions","handleMuscleGroupChange","handleExerciseChange","actualValue","muscleGroups","handleSearch","useCallback","cachedImages","setCachedImages","updatedCachedImages","img","prev","DashboardLayout","jsxs","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","group","Button","ScrollArea","motion","index","Card","CardHeader","CardContent","CardTitle"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}